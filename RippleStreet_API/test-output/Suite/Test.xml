<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="1" hostname="DESKTOP-PTHQFKR" failures="1" tests="45" name="Test" time="17.074" errors="0" timestamp="2023-06-16T18:03:01 IST">
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.033">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:60)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.004">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:60)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.004">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:60)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.007">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:60)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.004">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:60)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;io.restassured.response.Response.then()&amp;quot; because &amp;quot;this.response&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "io.restassured.response.Response.then()" because "this.response" is null
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:54)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.001">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:60)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.002">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:60)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.003">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:60)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.005">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:58)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.001">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:60)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.002">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:58)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.genricUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.002">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:60)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.002">
    <failure type="java.io.FileNotFoundException" message="C:UsersDelleclipse-workspaceEventControllersrc	estesourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: C:UsersDelleclipse-workspaceEventControllersrcest
esourcesconfigEventController.xlsx (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at com.ripplestreet.genricUtilities.amazonAwsUtilities.StatusCode(amazonAwsUtilities.java:60)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@BeforeMethod BaseURI" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod BaseURI -->
  <testcase classname="com.ripplestreet.genricUtilities.amazonAwsUtilities" name="@AfterMethod StatusCode" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StatusCode -->
  <testcase classname="com.ripplestreet.AllGetApis.userFamilyControllerGetApi" name="getAllPetTypes" time="2.159"/>
  <testcase classname="com.ripplestreet.AllGetApis.userFamilyControllerGetApi" name="getAllPetsForUser" time="0.0">
    <skipped/>
  </testcase> <!-- getAllPetsForUser -->
  <testcase classname="com.ripplestreet.AllGetApis.userFamilyControllerGetApi" name="getUserChildern" time="0.0">
    <skipped/>
  </testcase> <!-- getUserChildern -->
  <testcase classname="com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi" name="getAllocationTransientRecordByEventIdAndPersonId" time="1.21"/>
  <testcase classname="com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi" name="getListOfAllocationTransientRecordByEventId" time="0.0">
    <skipped/>
  </testcase> <!-- getListOfAllocationTransientRecordByEventId -->
  <testcase classname="com.ripplestreet.AllGetApis.CommunityControllerGetApi" name="GettingDetailOfHeadHostByPersonId" time="1.121"/>
  <testcase classname="com.ripplestreet.AllGetApis.CommunityControllerGetApi" name="getAllAddressEntriesByPersonId" time="0.0">
    <skipped/>
  </testcase> <!-- getAllAddressEntriesByPersonId -->
  <testcase classname="com.ripplestreet.AllGetApis.CommunityControllerGetApi" name="getAllEventsByUserAndParticipantType" time="0.0">
    <skipped/>
  </testcase> <!-- getAllEventsByUserAndParticipantType -->
  <testcase classname="com.ripplestreet.AllGetApis.CommunityControllerGetApi" name="getAllUsersByEventAndParticipantType" time="0.0">
    <skipped/>
  </testcase> <!-- getAllUsersByEventAndParticipantType -->
  <testcase classname="com.ripplestreet.AllGetApis.CommunityControllerGetApi" name="getUserDetails" time="0.0">
    <skipped/>
  </testcase> <!-- getUserDetails -->
  <testcase classname="com.ripplestreet.AllGetApis.CommunityControllerGetApi" name="getUserEventParticipationBit" time="0.0">
    <skipped/>
  </testcase> <!-- getUserEventParticipationBit -->
  <testcase classname="com.ripplestreet.AllGetApis.CommunityControllerGetApi" name="getUserListByFilters" time="0.0">
    <skipped/>
  </testcase> <!-- getUserListByFilters -->
  <testcase classname="com.ripplestreet.AllGetApis.CommunityControllerGetApi" name="getUserParticipationBits" time="0.0">
    <skipped/>
  </testcase> <!-- getUserParticipationBits -->
  <testcase classname="com.ripplestreet.AllGetApis.CommunityControllerGetApi" name="getUserProfile" time="0.0">
    <skipped/>
  </testcase> <!-- getUserProfile -->
  <testcase classname="com.ripplestreet.AllGetApis.ReservationControllerGetApi" name="GetUserStatusCountbyEventId" time="1.182"/>
  <testcase classname="com.ripplestreet.AllGetApis.IntrestesControllerGetApi" name="Allcategorieslist" time="1.348"/>
  <testcase classname="com.ripplestreet.AllGetApis.IntrestesControllerGetApi" name="getUserInterestByPersonId" time="0.0">
    <skipped/>
  </testcase> <!-- getUserInterestByPersonId -->
  <testcase classname="com.ripplestreet.AllGetApis.PartyControllerGetApi" name="getlistofparties" time="0.038">
    <failure type="java.lang.IllegalArgumentException" message="Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: eventId.">
      <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: eventId.
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:172)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at com.ripplestreet.AllGetApis.PartyControllerGetApi.getlistofparties(PartyControllerGetApi.java:14)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 54 stack frames]]>
    </failure>
  </testcase> <!-- getlistofparties -->
  <testcase classname="com.ripplestreet.AllGetApis.EnrollmentControllerGetApi" name="EnrollmentList" time="1.122"/>
  <testcase classname="com.ripplestreet.AllGetApis.EnrollmentControllerGetApi" name="GetUserEnrollments" time="0.0">
    <skipped/>
  </testcase> <!-- GetUserEnrollments -->
  <testcase classname="com.ripplestreet.AllGetApis.ApplicationControllerGetApi" name="getAllApplications" time="1.176"/>
  <testcase classname="com.ripplestreet.AllGetApis.UserStatusControllerGetApi" name="GetUserAndEventDataByEventIdandPersonId" time="1.218"/>
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getAllCurrentMileStoneByEvent" time="1.139"/>
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getAllEvents" time="0.0">
    <skipped/>
  </testcase> <!-- getAllEvents -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getAllMileStonesByEvent" time="0.0">
    <skipped/>
  </testcase> <!-- getAllMileStonesByEvent -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getAllProductByEvents" time="0.0">
    <skipped/>
  </testcase> <!-- getAllProductByEvents -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getAllSubscriptionsByServiceName" time="0.0">
    <skipped/>
  </testcase> <!-- getAllSubscriptionsByServiceName -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getEventById" time="0.0">
    <skipped/>
  </testcase> <!-- getEventById -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getAllServices" time="0.0">
    <skipped/>
  </testcase> <!-- getAllServices -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getAllSubscriptionsByEvent" time="0.0">
    <skipped/>
  </testcase> <!-- getAllSubscriptionsByEvent -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getEventDetailBySlug" time="0.0">
    <skipped/>
  </testcase> <!-- getEventDetailBySlug -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getProductDetailEventIdAndProductId" time="0.0">
    <skipped/>
  </testcase> <!-- getProductDetailEventIdAndProductId -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getpackAndApplicationCountByEventId" time="0.0">
    <skipped/>
  </testcase> <!-- getpackAndApplicationCountByEventId -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getByEventName" time="0.0">
    <skipped/>
  </testcase> <!-- getByEventName -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getCurrentMileStonesByEvent" time="0.0">
    <skipped/>
  </testcase> <!-- getCurrentMileStonesByEvent -->
  <testcase classname="com.ripplestreet.AllGetApis.AudienceControllerGetApi" name="getParticipantsWithApplicationsForEvent" time="1.156"/>
  <testcase classname="com.ripplestreet.AllGetApis.EventFeedControllerGetApi" name="getAllFeedsForEvent" time="1.251"/>
  <testcase classname="com.ripplestreet.AllGetApis.EventFeedControllerGetApi" name="getCommentFeedByEventId" time="0.0">
    <skipped/>
  </testcase> <!-- getCommentFeedByEventId -->
  <testcase classname="com.ripplestreet.AllGetApis.EventFeedControllerGetApi" name="getFeedInfoById" time="0.0">
    <skipped/>
  </testcase> <!-- getFeedInfoById -->
  <testcase classname="com.ripplestreet.AllGetApis.EventFeedControllerGetApi" name="getPhotoFeedByEventId" time="0.0">
    <skipped/>
  </testcase> <!-- getPhotoFeedByEventId -->
  <testcase classname="com.ripplestreet.AllGetApis.EventFeedControllerGetApi" name="getReviewFeedByEventId" time="0.0">
    <skipped/>
  </testcase> <!-- getReviewFeedByEventId -->
  <testcase classname="com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi" name="getListOfAudiencePromotionJobsByEventId" time="1.153"/>
  <testcase classname="com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi" name="getListOfInviteOnlyUsersByEventId" time="0.0">
    <skipped/>
  </testcase> <!-- getListOfInviteOnlyUsersByEventId -->
  <testcase classname="com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi" name="getActiveEventsDetailForUser" time="1.124"/>
  <testcase classname="com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi" name="getAllEventsByUserAndParticipantTypeApplicant" time="0.0">
    <skipped/>
  </testcase> <!-- getAllEventsByUserAndParticipantTypeApplicant -->
  <testcase classname="com.ripplestreet.AllGetApis.EventControllerGetApi" name="getEventDetailForWorkFlow" time="0.0">
    <ignored/>
  </testcase> <!-- getEventDetailForWorkFlow -->
</testsuite> <!-- Test -->
