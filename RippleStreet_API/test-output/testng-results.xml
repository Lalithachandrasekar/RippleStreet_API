<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="255" passed="238" failed="3" skipped="13">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-14T16:50:18 IST" name="Suite" finished-at="2023-07-14T16:56:31 IST" duration-ms="373823">
    <groups>
      <group name="gamification">
        <method signature="CouponControllerGetApi.getCouponsByActivityId()[pri:91, instance:com.ripplestreet.AllGetApis.CouponControllerGetApi@3116c353]" name="getCouponsByActivityId" class="com.ripplestreet.AllGetApis.CouponControllerGetApi"/>
        <method signature="GameControllerGetApi.getAllgames()[pri:92, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" name="getAllgames" class="com.ripplestreet.AllGetApis.GameControllerGetApi"/>
        <method signature="GameControllerGetApi.getGameBygameId()[pri:93, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" name="getGameBygameId" class="com.ripplestreet.AllGetApis.GameControllerGetApi"/>
        <method signature="GameControllerGetApi.GetGameTrackerRedisObjByGameId()[pri:94, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" name="GetGameTrackerRedisObjByGameId" class="com.ripplestreet.AllGetApis.GameControllerGetApi"/>
        <method signature="GameControllerGetApi.getWinningoptionBasedOnTheProbability()[pri:95, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" name="getWinningoptionBasedOnTheProbability" class="com.ripplestreet.AllGetApis.GameControllerGetApi"/>
        <method signature="gameOptionControllerGetApi.getGameOptionBySlug()[pri:96, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@463fd068]" name="getGameOptionBySlug" class="com.ripplestreet.AllGetApis.gameOptionControllerGetApi"/>
        <method signature="gameOptionControllerGetApi.getListOfOptionsByGameId()[pri:97, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@463fd068]" name="getListOfOptionsByGameId" class="com.ripplestreet.AllGetApis.gameOptionControllerGetApi"/>
        <method signature="GameOptionsControllertPutApi.updateOptionById()[pri:210, instance:com.ripplestreet.AllPutApis.GameOptionsControllertPutApi@55c53a33]" name="updateOptionById" class="com.ripplestreet.AllPutApis.GameOptionsControllertPutApi"/>
      </group> <!-- gamification -->
      <group name="activityugcreview">
        <method signature="UgcControllerGetApi.downloadAsset()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" name="downloadAsset" class="com.ripplestreet.AllGetApis.UgcControllerGetApi"/>
        <method signature="UgcControllerGetApi.getUgcDetailsByTaskId()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" name="getUgcDetailsByTaskId" class="com.ripplestreet.AllGetApis.UgcControllerGetApi"/>
        <method signature="ReviewControllerGetApi.getExternalReview()[pri:46, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" name="getExternalReview" class="com.ripplestreet.AllGetApis.ReviewControllerGetApi"/>
        <method signature="ReviewControllerGetApi.getReviewsByTaskId()[pri:47, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" name="getReviewsByTaskId" class="com.ripplestreet.AllGetApis.ReviewControllerGetApi"/>
        <method signature="ReviewControllerGetApi.getReview()[pri:48, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" name="getReview" class="com.ripplestreet.AllGetApis.ReviewControllerGetApi"/>
        <method signature="UgcControllerGetApi.downloadAssetByURL()[pri:51, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" name="downloadAssetByURL" class="com.ripplestreet.AllGetApis.UgcControllerGetApi"/>
        <method signature="UgcControllerGetApi.getImageRecognitionResponse()[pri:52, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" name="getImageRecognitionResponse" class="com.ripplestreet.AllGetApis.UgcControllerGetApi"/>
        <method signature="UgcControllerGetApi.getUgcDetailsById()[pri:53, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" name="getUgcDetailsById" class="com.ripplestreet.AllGetApis.UgcControllerGetApi"/>
        <method signature="SocialShareControllerGetApi.getReview()[pri:57, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@2b72cb8a]" name="getReview" class="com.ripplestreet.AllGetApis.SocialShareControllerGetApi"/>
        <method signature="SocialShareControllerGetApi.getAllReviews()[pri:58, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@2b72cb8a]" name="getAllReviews" class="com.ripplestreet.AllGetApis.SocialShareControllerGetApi"/>
        <method signature="reviewControllerPutApi.updateExternalReview()[pri:195, instance:com.ripplestreet.AllPutApis.reviewControllerPutApi@29a5f4e7]" name="updateExternalReview" class="com.ripplestreet.AllPutApis.reviewControllerPutApi"/>
        <method signature="DiscussionControllerPutApi.updateAdminDiscussion()[pri:196, instance:com.ripplestreet.AllPutApis.DiscussionControllerPutApi@43599640]" name="updateAdminDiscussion" class="com.ripplestreet.AllPutApis.DiscussionControllerPutApi"/>
      </group> <!-- activityugcreview -->
      <group name="notification">
        <method signature="NotificationControllerGetApi.isEmailExistInSuppressionList()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" name="isEmailExistInSuppressionList" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="NotificationControllerGetApi.getAllNotification()[pri:127, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" name="getAllNotification" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="NotificationControllerGetApi.GetCampaignByNotificationId()[pri:128, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" name="GetCampaignByNotificationId" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="NotificationControllerGetApi.GetStatusByNotificationId()[pri:129, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" name="GetStatusByNotificationId" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="NotificationControllerGetApi.SearchCampaignforNotification()[pri:130, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" name="SearchCampaignforNotification" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="NotificationControllerGetApi.GetKPIMatrixByCampaignId()[pri:132, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" name="GetKPIMatrixByCampaignId" class="com.ripplestreet.AllGetApis.NotificationControllerGetApi"/>
        <method signature="PreSignedURLControllerGetApi.getAllFilesBynotificationId()[pri:133, instance:com.ripplestreet.AllGetApis.PreSignedURLControllerGetApi@4a00d9cf]" name="getAllFilesBynotificationId" class="com.ripplestreet.AllGetApis.PreSignedURLControllerGetApi"/>
        <method signature="TemplateControllerGetApi.template()[pri:133, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" name="template" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.AllEmailList()[pri:134, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" name="AllEmailList" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.PreviewTemplateContent()[pri:135, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" name="PreviewTemplateContent" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.GettemplateByTrasactionalType()[pri:136, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" name="GettemplateByTrasactionalType" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.DownloadCSVLoader()[pri:137, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" name="DownloadCSVLoader" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.GetTemplateListByTransactionalTypeAndEventId()[pri:138, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" name="GetTemplateListByTransactionalTypeAndEventId" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="TemplateControllerGetApi.getTransactionalTemplateById()[pri:139, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" name="getTransactionalTemplateById" class="com.ripplestreet.AllGetApis.TemplateControllerGetApi"/>
        <method signature="RecipientsController.GetAllRecipientForCampaignId()[pri:140, instance:com.ripplestreet.AllGetApis.RecipientsController@50313382]" name="GetAllRecipientForCampaignId" class="com.ripplestreet.AllGetApis.RecipientsController"/>
      </group> <!-- notification -->
      <group name="common-service">
        <method signature="CommonServiceFeedControllerGeApi.getAllFeedsForEvents()[pri:98, instance:com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi@495ee280]" name="getAllFeedsForEvents" class="com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi"/>
        <method signature="jobControllerGetApi.getAllJobByTypeAndId()[pri:99, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@7a3793c7]" name="getAllJobByTypeAndId" class="com.ripplestreet.AllGetApis.jobControllerGetApi"/>
        <method signature="jobControllerGetApi.getAllListOfJobsBySourcetype()[pri:100, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@7a3793c7]" name="getAllListOfJobsBySourcetype" class="com.ripplestreet.AllGetApis.jobControllerGetApi"/>
        <method signature="ReceiptControllerGetApi.getReceiptRecordWithData()[pri:101, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@52815fa3]" name="getReceiptRecordWithData" class="com.ripplestreet.AllGetApis.ReceiptControllerGetApi"/>
        <method signature="ReceiptControllerGetApi.getReceiptList()[pri:102, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@52815fa3]" name="getReceiptList" class="com.ripplestreet.AllGetApis.ReceiptControllerGetApi"/>
        <method signature="storesControllerGetApi.getAllStoreCollection()[pri:103, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@5d43661b]" name="getAllStoreCollection" class="com.ripplestreet.AllGetApis.storesControllerGetApi"/>
        <method signature="storesControllerGetApi.getStoreListByCollectionName()[pri:104, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@5d43661b]" name="getStoreListByCollectionName" class="com.ripplestreet.AllGetApis.storesControllerGetApi"/>
      </group> <!-- common-service -->
      <group name="activity-hub">
        <method signature="ActivityControllerGetApi.getListOfActivities()[pri:68, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@7f284218]" name="getListOfActivities" class="com.ripplestreet.AllGetApis.ActivityControllerGetApi"/>
        <method signature="ActivityControllerGetApi.getActivity()[pri:69, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@7f284218]" name="getActivity" class="com.ripplestreet.AllGetApis.ActivityControllerGetApi"/>
        <method signature="ActivityGroupControllerGetApi.GetListofActivityGroups()[pri:70, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" name="GetListofActivityGroups" class="com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi"/>
        <method signature="ActivityGroupControllerGetApi.GetActivityGroupsByyEventId()[pri:71, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" name="GetActivityGroupsByyEventId" class="com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi"/>
        <method signature="ActivityGroupControllerGetApi.GetActivityGroup()[pri:72, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" name="GetActivityGroup" class="com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi"/>
        <method signature="TaskControllerGetApi.getListOfTasks()[pri:73, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@420a85c4]" name="getListOfTasks" class="com.ripplestreet.AllGetApis.TaskControllerGetApi"/>
        <method signature="TaskControllerGetApi.getTask()[pri:74, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@420a85c4]" name="getTask" class="com.ripplestreet.AllGetApis.TaskControllerGetApi"/>
        <method signature="MobileAppControllerGetApi.GetListOfMyActivities()[pri:75, instance:com.ripplestreet.AllGetApis.MobileAppControllerGetApi@4dd6fd0a]" name="GetListOfMyActivities" class="com.ripplestreet.AllGetApis.MobileAppControllerGetApi"/>
        <method signature="ActivityControllerPutApi.UpdateActivity()[pri:197, instance:com.ripplestreet.AllPutApis.ActivityControllerPutApi@51c693d]" name="UpdateActivity" class="com.ripplestreet.AllPutApis.ActivityControllerPutApi"/>
        <method signature="ActivityControllerPutApi.ReopenActivity()[pri:198, instance:com.ripplestreet.AllPutApis.ActivityControllerPutApi@51c693d]" name="ReopenActivity" class="com.ripplestreet.AllPutApis.ActivityControllerPutApi"/>
        <method signature="ActivityGroupControllerPutApi.updateActivityGroup()[pri:199, instance:com.ripplestreet.AllPutApis.ActivityGroupControllerPutApi@6a57ae10]" name="updateActivityGroup" class="com.ripplestreet.AllPutApis.ActivityGroupControllerPutApi"/>
        <method signature="TaskControllerPutApi.updateTask()[pri:200, instance:com.ripplestreet.AllPutApis.TaskControllerPutApi@1e4d3ce5]" name="updateTask" class="com.ripplestreet.AllPutApis.TaskControllerPutApi"/>
        <method signature="TrackerControllerGetApi.updateActivityTrackerstatuses()[pri:201, instance:com.ripplestreet.AllPutApis.TrackerControllerGetApi@704deff2]" name="updateActivityTrackerstatuses" class="com.ripplestreet.AllPutApis.TrackerControllerGetApi"/>
      </group> <!-- activity-hub -->
      <group name="benefits-platform">
        <method signature="AchievementControllerGetApi.GetListofAchievements()[pri:59, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" name="GetListofAchievements" class="com.ripplestreet.AllGetApis.AchievementControllerGetApi"/>
        <method signature="AchievementControllerGetApi.getAchivements()[pri:60, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" name="getAchivements" class="com.ripplestreet.AllGetApis.AchievementControllerGetApi"/>
        <method signature="AchievementControllerGetApi.GetListofAchievementsforTriggerId()[pri:61, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" name="GetListofAchievementsforTriggerId" class="com.ripplestreet.AllGetApis.AchievementControllerGetApi"/>
        <method signature="AchievementProgramControllerGetApi.GetListofAchievementPrograms()[pri:62, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" name="GetListofAchievementPrograms" class="com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi"/>
        <method signature="AchievementProgramControllerGetApi.GetListOfAchievementProgramsforAchievementId()[pri:63, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" name="GetListOfAchievementProgramsforAchievementId" class="com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi"/>
        <method signature="AchievementProgramControllerGetApi.GetAchievementProgram()[pri:64, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" name="GetAchievementProgram" class="com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi"/>
        <method signature="BenefitControllerGetApi.GetListofBenefit()[pri:65, instance:com.ripplestreet.AllGetApis.BenefitControllerGetApi@5f0fd5a0]" name="GetListofBenefit" class="com.ripplestreet.AllGetApis.BenefitControllerGetApi"/>
        <method signature="UserAchievementControllerGetApi.getUserAchivmentsDetails()[pri:66, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@266374ef]" name="getUserAchivmentsDetails" class="com.ripplestreet.AllGetApis.UserAchievementControllerGetApi"/>
        <method signature="UserAchievementControllerGetApi.getUserProgramsDetailes()[pri:67, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@266374ef]" name="getUserProgramsDetailes" class="com.ripplestreet.AllGetApis.UserAchievementControllerGetApi"/>
        <method signature="AchivementControllerPutApi.updateAchivement()[pri:202, instance:com.ripplestreet.AllPutApis.AchivementControllerPutApi@a82c5f1]" name="updateAchivement" class="com.ripplestreet.AllPutApis.AchivementControllerPutApi"/>
        <method signature="AchivementProgrameControllerPutApi.updateAchivementPrograme()[pri:203, instance:com.ripplestreet.AllPutApis.AchivementProgrameControllerPutApi@7b7fdc8]" name="updateAchivementPrograme" class="com.ripplestreet.AllPutApis.AchivementProgrameControllerPutApi"/>
        <method signature="BenefitControllerPutApi.updateBenefit()[pri:204, instance:com.ripplestreet.AllPutApis.BenefitControllerPutApi@7fc4780b]" name="updateBenefit" class="com.ripplestreet.AllPutApis.BenefitControllerPutApi"/>
      </group> <!-- benefits-platform -->
      <group name="event-campaign-manager">
        <method signature="AgencyControllerGetApi.findAllAgencies()[pri:141, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@4ea5b703]" name="findAllAgencies" class="com.ripplestreet.AllGetApis.AgencyControllerGetApi"/>
        <method signature="AgencyControllerGetApi.getAgencyById()[pri:142, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@4ea5b703]" name="getAgencyById" class="com.ripplestreet.AllGetApis.AgencyControllerGetApi"/>
        <method signature="AssetControllerGetApi.getAssetById()[pri:143, instance:com.ripplestreet.AllGetApis.AssetControllerGetApi@3fa247d1]" name="getAssetById" class="com.ripplestreet.AllGetApis.AssetControllerGetApi"/>
        <method signature="CampaignControllerGetApi.findCampaignById()[pri:144, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@64e7619d]" name="findCampaignById" class="com.ripplestreet.AllGetApis.CampaignControllerGetApi"/>
        <method signature="CampaignControllerGetApi.findAllCampaingn()[pri:145, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@64e7619d]" name="findAllCampaingn" class="com.ripplestreet.AllGetApis.CampaignControllerGetApi"/>
        <method signature="ConfigurationController.getAllconfigs()[pri:146, instance:com.ripplestreet.AllGetApis.ConfigurationController@6ea2bc93]" name="getAllconfigs" class="com.ripplestreet.AllGetApis.ConfigurationController"/>
        <method signature="CreativeControllerGetApi.findHeroPlaylistById()[pri:147, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" name="findHeroPlaylistById" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.findAllHeroPlaylistByModelId()[pri:148, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" name="findAllHeroPlaylistByModelId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.getBannerByEventIdandId()[pri:149, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" name="getBannerByEventIdandId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.getFavorByEventIdAndId()[pri:150, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" name="getFavorByEventIdAndId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.finAllBannerByEventId()[pri:151, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" name="finAllBannerByEventId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.FinfAllfavousByEventId()[pri:152, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" name="FinfAllfavousByEventId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.FindHeroplaylistitemById()[pri:153, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" name="FindHeroplaylistitemById" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="CreativeControllerGetApi.findAllHeroPlaylistItemsByPlayListId()[pri:154, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" name="findAllHeroPlaylistItemsByPlayListId" class="com.ripplestreet.AllGetApis.CreativeControllerGetApi"/>
        <method signature="DraftEventControllerGetApi.getListOfEventsBycampaignId()[pri:155, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@352ff4da]" name="getListOfEventsBycampaignId" class="com.ripplestreet.AllGetApis.DraftEventControllerGetApi"/>
        <method signature="DraftEventControllerGetApi.getDraftEventByEventId()[pri:156, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@352ff4da]" name="getDraftEventByEventId" class="com.ripplestreet.AllGetApis.DraftEventControllerGetApi"/>
        <method signature="EventDetailControllerGetApi.getBasicEventDetailByEventID()[pri:157, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" name="getBasicEventDetailByEventID" class="com.ripplestreet.AllGetApis.EventDetailControllerGetApi"/>
        <method signature="EventDetailControllerGetApi.findAllmileStonesByEvent()[pri:158, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" name="findAllmileStonesByEvent" class="com.ripplestreet.AllGetApis.EventDetailControllerGetApi"/>
        <method signature="EventDetailControllerGetApi.findMileStoneById()[pri:159, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" name="findMileStoneById" class="com.ripplestreet.AllGetApis.EventDetailControllerGetApi"/>
        <method signature="EventDetailControllerGetApi.getListoftargetsByEventId()[pri:160, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" name="getListoftargetsByEventId" class="com.ripplestreet.AllGetApis.EventDetailControllerGetApi"/>
        <method signature="EventDetailControllerGetApi.findAllMilestonesTypeByEventtypes()[pri:161, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" name="findAllMilestonesTypeByEventtypes" class="com.ripplestreet.AllGetApis.EventDetailControllerGetApi"/>
        <method signature="FAQcontrollerGetApi.getFAQbyEventId()[pri:163, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" name="getFAQbyEventId" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="FAQcontrollerGetApi.getFAQById()[pri:164, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" name="getFAQById" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="FAQcontrollerGetApi.GetFAQDetailByEventIdforCommunity()[pri:165, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" name="GetFAQDetailByEventIdforCommunity" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="FAQcontrollerGetApi.getlistofFaqTopicbyFaqId()[pri:166, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" name="getlistofFaqTopicbyFaqId" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="FAQcontrollerGetApi.FAQTopicByID()[pri:167, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" name="FAQTopicByID" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="FAQcontrollerGetApi.GetlistofFaqTopicItemsbyFaqTopicId()[pri:168, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" name="GetlistofFaqTopicItemsbyFaqTopicId" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="FAQcontrollerGetApi.getFAQTopicitemsById()[pri:169, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" name="getFAQTopicitemsById" class="com.ripplestreet.AllGetApis.FAQcontrollerGetApi"/>
        <method signature="LegalControllerGetApi.getLegalDesclaimer()[pri:170, instance:com.ripplestreet.AllGetApis.LegalControllerGetApi@42b3b079]" name="getLegalDesclaimer" class="com.ripplestreet.AllGetApis.LegalControllerGetApi"/>
        <method signature="MarketingGoalsControllerGetApi.getMarketingGoalsForEvent()[pri:171, instance:com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi@651aed93]" name="getMarketingGoalsForEvent" class="com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi"/>
        <method signature="ProductControllerGetApi.getListOfProdutsByEventID()[pri:172, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@6736fa8d]" name="getListOfProdutsByEventID" class="com.ripplestreet.AllGetApis.ProductControllerGetApi"/>
        <method signature="ProductControllerGetApi.getProductsById()[pri:173, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@6736fa8d]" name="getProductsById" class="com.ripplestreet.AllGetApis.ProductControllerGetApi"/>
        <method signature="RoleControllerGetApi.getLlistOfPeopleByRoleID()[pri:174, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@20d7d6fb]" name="getLlistOfPeopleByRoleID" class="com.ripplestreet.AllGetApis.RoleControllerGetApi"/>
        <method signature="RoleControllerGetApi.getListOfRoles()[pri:175, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@20d7d6fb]" name="getListOfRoles" class="com.ripplestreet.AllGetApis.RoleControllerGetApi"/>
        <method signature="SponserControllerGetApi.findSponsorById()[pri:176, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" name="findSponsorById" class="com.ripplestreet.AllGetApis.SponserControllerGetApi"/>
        <method signature="SponserControllerGetApi.getAllSponsors()[pri:177, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" name="getAllSponsors" class="com.ripplestreet.AllGetApis.SponserControllerGetApi"/>
        <method signature="SponserControllerGetApi.findAllsponsorAssetsbysponsorId()[pri:178, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" name="findAllsponsorAssetsbysponsorId" class="com.ripplestreet.AllGetApis.SponserControllerGetApi"/>
        <method signature="SurveyControllerGetApi.getSurveyStatusByEventIdAndPid()[pri:179, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" name="getSurveyStatusByEventIdAndPid" class="com.ripplestreet.AllGetApis.SurveyControllerGetApi"/>
        <method signature="SurveyControllerGetApi.getAllLinksByEventId()[pri:180, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" name="getAllLinksByEventId" class="com.ripplestreet.AllGetApis.SurveyControllerGetApi"/>
        <method signature="SurveyControllerGetApi.getSurveyListByEventIdAndPid()[pri:181, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" name="getSurveyListByEventIdAndPid" class="com.ripplestreet.AllGetApis.SurveyControllerGetApi"/>
        <method signature="TargetsControllerGetApi.getAlltargets()[pri:182, instance:com.ripplestreet.AllGetApis.TargetsControllerGetApi@4bf48f6]" name="getAlltargets" class="com.ripplestreet.AllGetApis.TargetsControllerGetApi"/>
        <method signature="TrackableLinkcontrollerGetApi.findAllLinksForAnEvent()[pri:183, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@62833051]" name="findAllLinksForAnEvent" class="com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi"/>
        <method signature="TrackableLinkcontrollerGetApi.getLinkById()[pri:184, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@62833051]" name="getLinkById" class="com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi"/>
        <method signature="WorkFlowTemplateControllerGetApi.getEventWorkflowTemplateByEventId()[pri:185, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" name="getEventWorkflowTemplateByEventId" class="com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi"/>
        <method signature="WorkFlowTemplateControllerGetApi.getListOfWorkFlowTemplates()[pri:186, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" name="getListOfWorkFlowTemplates" class="com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi"/>
        <method signature="WorkFlowTemplateControllerGetApi.getStepFunctionByArn()[pri:187, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" name="getStepFunctionByArn" class="com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi"/>
        <method signature="AgencyControllerPutApi.updateAgency()[pri:231, instance:com.ripplestreet.AllPutApis.AgencyControllerPutApi@766653e6]" name="updateAgency" class="com.ripplestreet.AllPutApis.AgencyControllerPutApi"/>
        <method signature="AssetControllerPutApi.softDeleteByAssetId()[pri:232, instance:com.ripplestreet.AllPutApis.AssetControllerPutApi@28b46423]" name="softDeleteByAssetId" class="com.ripplestreet.AllPutApis.AssetControllerPutApi"/>
        <method signature="CampaignControllerPutApi.updateCampaign()[pri:233, instance:com.ripplestreet.AllPutApis.CampaignControllerPutApi@3b79fd76]" name="updateCampaign" class="com.ripplestreet.AllPutApis.CampaignControllerPutApi"/>
        <method signature="CreativeControllerPutApi.updateBannerIdandEventId()[pri:234, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" name="updateBannerIdandEventId" class="com.ripplestreet.AllPutApis.CreativeControllerPutApi"/>
        <method signature="CreativeControllerPutApi.updateFavors()[pri:235, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" name="updateFavors" class="com.ripplestreet.AllPutApis.CreativeControllerPutApi"/>
        <method signature="CreativeControllerPutApi.reOrganizeFavors()[pri:236, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" name="reOrganizeFavors" class="com.ripplestreet.AllPutApis.CreativeControllerPutApi"/>
        <method signature="CreativeControllerPutApi.UpdateHeroPlayListItems()[pri:237, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" name="UpdateHeroPlayListItems" class="com.ripplestreet.AllPutApis.CreativeControllerPutApi"/>
        <method signature="CreativeControllerPutApi.ReOrganizeHeroPlayListItems()[pri:238, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" name="ReOrganizeHeroPlayListItems" class="com.ripplestreet.AllPutApis.CreativeControllerPutApi"/>
        <method signature="DraftEventControllerPutApi.updateDraftEvent()[pri:239, instance:com.ripplestreet.AllPutApis.DraftEventControllerPutApi@1f81aa00]" name="updateDraftEvent" class="com.ripplestreet.AllPutApis.DraftEventControllerPutApi"/>
        <method signature="EventDetailControllerPutApi.addEventBasicDetail()[pri:240, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" name="addEventBasicDetail" class="com.ripplestreet.AllPutApis.EventDetailControllerPutApi"/>
        <method signature="EventDetailControllerPutApi.updateeventEventMileStones()[pri:241, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" name="updateeventEventMileStones" class="com.ripplestreet.AllPutApis.EventDetailControllerPutApi"/>
        <method signature="EventDetailControllerPutApi.UpdateEventTarget()[pri:242, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" name="UpdateEventTarget" class="com.ripplestreet.AllPutApis.EventDetailControllerPutApi"/>
        <method signature="FAQSControllerPutApi.updateFAQ()[pri:243, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" name="updateFAQ" class="com.ripplestreet.AllPutApis.FAQSControllerPutApi"/>
        <method signature="FAQSControllerPutApi.updateFAQTopicItems()[pri:244, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" name="updateFAQTopicItems" class="com.ripplestreet.AllPutApis.FAQSControllerPutApi"/>
        <method signature="FAQSControllerPutApi.updateFAQTopics()[pri:245, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" name="updateFAQTopics" class="com.ripplestreet.AllPutApis.FAQSControllerPutApi"/>
        <method signature="LegalControllerPutrApi.updateLegalDisclaimer()[pri:246, instance:com.ripplestreet.AllPutApis.LegalControllerPutrApi@797b0699]" name="updateLegalDisclaimer" class="com.ripplestreet.AllPutApis.LegalControllerPutrApi"/>
        <method signature="MarketingGoalsPutApi.updateMArketingGoalForEvent()[pri:247, instance:com.ripplestreet.AllPutApis.MarketingGoalsPutApi@5a37d3ed]" name="updateMArketingGoalForEvent" class="com.ripplestreet.AllPutApis.MarketingGoalsPutApi"/>
        <method signature="SponsorControllerPutApi.updateSponser()[pri:250, instance:com.ripplestreet.AllPutApis.SponsorControllerPutApi@4f704591]" name="updateSponser" class="com.ripplestreet.AllPutApis.SponsorControllerPutApi"/>
        <method signature="TackableLinkControllerPutApi.updateLink()[pri:251, instance:com.ripplestreet.AllPutApis.TackableLinkControllerPutApi@4b5189ac]" name="updateLink" class="com.ripplestreet.AllPutApis.TackableLinkControllerPutApi"/>
      </group> <!-- event-campaign-manager -->
      <group name="community-service">
        <method signature="ApplicationsControllerPutApi.updateApplications()[pri:0, instance:com.ripplestreet.AllPutApis.ApplicationsControllerPutApi@4e07b95f]" name="updateApplications" class="com.ripplestreet.AllPutApis.ApplicationsControllerPutApi"/>
        <method signature="ApplicationControllerGetApi.getAllApplications()[pri:19, instance:com.ripplestreet.AllGetApis.ApplicationControllerGetApi@2a7ed1f]" name="getAllApplications" class="com.ripplestreet.AllGetApis.ApplicationControllerGetApi"/>
        <method signature="AudienceControllerGetApi.getParticipantsWithApplicationsForEvent()[pri:20, instance:com.ripplestreet.AllGetApis.AudienceControllerGetApi@2cb2fc20]" name="getParticipantsWithApplicationsForEvent" class="com.ripplestreet.AllGetApis.AudienceControllerGetApi"/>
        <method signature="AudiencePromotionControllerGetApi.getListOfAudiencePromotionJobsByEventId()[pri:21, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@4f4c4b1a]" name="getListOfAudiencePromotionJobsByEventId" class="com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi"/>
        <method signature="AudiencePromotionControllerGetApi.getListOfInviteOnlyUsersByEventId()[pri:22, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@4f4c4b1a]" name="getListOfInviteOnlyUsersByEventId" class="com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getAllAddressEntriesByPersonId()[pri:23, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" name="getAllAddressEntriesByPersonId" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getAllEventsByUserAndParticipantType()[pri:24, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" name="getAllEventsByUserAndParticipantType" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getAllUsersByEventAndParticipantType()[pri:25, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" name="getAllUsersByEventAndParticipantType" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.GettingDetailOfHeadHostByPersonId()[pri:26, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" name="GettingDetailOfHeadHostByPersonId" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getUserEventParticipationBit()[pri:27, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" name="getUserEventParticipationBit" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getUserListByFilters()[pri:28, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" name="getUserListByFilters" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getUserParticipationBits()[pri:29, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" name="getUserParticipationBits" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getUserProfile()[pri:30, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" name="getUserProfile" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="CommunityControllerGetApi.getUserDetails()[pri:31, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" name="getUserDetails" class="com.ripplestreet.AllGetApis.CommunityControllerGetApi"/>
        <method signature="EnrollmentControllerGetApi.EnrollmentList()[pri:32, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@3224a577]" name="EnrollmentList" class="com.ripplestreet.AllGetApis.EnrollmentControllerGetApi"/>
        <method signature="EnrollmentControllerGetApi.GetUserEnrollments()[pri:33, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@3224a577]" name="GetUserEnrollments" class="com.ripplestreet.AllGetApis.EnrollmentControllerGetApi"/>
        <method signature="IntrestesControllerGetApi.Allcategorieslist()[pri:34, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@895e367]" name="Allcategorieslist" class="com.ripplestreet.AllGetApis.IntrestesControllerGetApi"/>
        <method signature="IntrestesControllerGetApi.getUserInterestByPersonId()[pri:35, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@895e367]" name="getUserInterestByPersonId" class="com.ripplestreet.AllGetApis.IntrestesControllerGetApi"/>
        <method signature="MobileCommunityControllerGetApi.getAllEventsByUserAndParticipantTypeApplicant()[pri:36, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@bb9e6dc]" name="getAllEventsByUserAndParticipantTypeApplicant" class="com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi"/>
        <method signature="MobileCommunityControllerGetApi.getActiveEventsDetailForUser()[pri:37, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@bb9e6dc]" name="getActiveEventsDetailForUser" class="com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi"/>
        <method signature="PartyControllerGetApi.getlistofparties()[pri:40, instance:com.ripplestreet.AllGetApis.PartyControllerGetApi@39d76cb5]" name="getlistofparties" class="com.ripplestreet.AllGetApis.PartyControllerGetApi"/>
        <method signature="ReservationControllerGetApi.GetUserStatusCountbyEventId()[pri:41, instance:com.ripplestreet.AllGetApis.ReservationControllerGetApi@1cb346ea]" name="GetUserStatusCountbyEventId" class="com.ripplestreet.AllGetApis.ReservationControllerGetApi"/>
        <method signature="userFamilyControllerGetApi.getUserChildern()[pri:42, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" name="getUserChildern" class="com.ripplestreet.AllGetApis.userFamilyControllerGetApi"/>
        <method signature="userFamilyControllerGetApi.getAllPetTypes()[pri:43, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" name="getAllPetTypes" class="com.ripplestreet.AllGetApis.userFamilyControllerGetApi"/>
        <method signature="userFamilyControllerGetApi.getAllPetsForUser()[pri:44, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" name="getAllPetsForUser" class="com.ripplestreet.AllGetApis.userFamilyControllerGetApi"/>
        <method signature="UserStatusControllerGetApi.GetUserAndEventDataByEventIdandPersonId()[pri:45, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@24c4ddae]" name="GetUserAndEventDataByEventIdandPersonId" class="com.ripplestreet.AllGetApis.UserStatusControllerGetApi"/>
      </group> <!-- community-service -->
      <group name="segmentation">
        <method signature="AudienceSearchControllerGetApi.searchableFields()[pri:76, instance:com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi@723e88f9]" name="searchableFields" class="com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi"/>
        <method signature="SegmentationDataControllerGetApi.FindIfUserExistInGivenSegment()[pri:77, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" name="FindIfUserExistInGivenSegment" class="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi"/>
        <method signature="SegmentationDataControllerGetApi.GetSegmentIdBySegmentName()[pri:78, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" name="GetSegmentIdBySegmentName" class="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi"/>
        <method signature="SegmentationDataControllerGetApi.GetSegmentsOfaUser()[pri:79, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" name="GetSegmentsOfaUser" class="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi"/>
        <method signature="SegmentationDataControllerGetApi.GetUsersOfaSegment()[pri:80, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" name="GetUsersOfaSegment" class="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi"/>
        <method signature="SegmentationDataControllerGetApi.GetUserDetailsOfaSegment()[pri:81, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" name="GetUserDetailsOfaSegment" class="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi"/>
        <method signature="SegmentationDefinitionControllerVersion2.getGetSegmentDefinitionByFolderIdAndSegmentId()[pri:82, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" name="getGetSegmentDefinitionByFolderIdAndSegmentId" class="com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2"/>
        <method signature="SegmentationDefinitionControllerVersion2.getAllSegments()[pri:83, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" name="getAllSegments" class="com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2"/>
        <method signature="SegmentationDefinitionControllerVersion2.getSegmentDefinitionById()[pri:84, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" name="getSegmentDefinitionById" class="com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2"/>
        <method signature="SegmentationFolderControllerGetApi.getAllSegmentFolder()[pri:85, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@479cbee5]" name="getAllSegmentFolder" class="com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi"/>
        <method signature="SegmentationFolderControllerGetApi.GetSegmentFolderFromCampaignSegment()[pri:86, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@479cbee5]" name="GetSegmentFolderFromCampaignSegment" class="com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi"/>
        <method signature="SegmentationJobsControllerGetApi.getAllSegmentJobsForSegmentId()[pri:87, instance:com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi@59e2d8e3]" name="getAllSegmentJobsForSegmentId" class="com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi"/>
        <method signature="TriggerControllerGetApi.GetAllTriggers()[pri:88, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" name="GetAllTriggers" class="com.ripplestreet.AllGetApis.TriggerControllerGetApi"/>
        <method signature="TriggerControllerGetApi.getTriggerInfoByTableNameAndOperation()[pri:90, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" name="getTriggerInfoByTableNameAndOperation" class="com.ripplestreet.AllGetApis.TriggerControllerGetApi"/>
        <method signature="TriggerControllerGetApi.getTriggerDefinition()[pri:189, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" name="getTriggerDefinition" class="com.ripplestreet.AllGetApis.TriggerControllerGetApi"/>
        <method signature="SegmentationDefinitionVersion2ControllerPutApi.UpdateASegment()[pri:205, instance:com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi@27e47833]" name="UpdateASegment" class="com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi"/>
        <method signature="SegmentationDefinitionVersion2ControllerPutApi.refreshUserCountBySgment()[pri:206, instance:com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi@27e47833]" name="refreshUserCountBySgment" class="com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi"/>
        <method signature="SegmentationFolderControllerPutApi.updateASegementfolder()[pri:207, instance:com.ripplestreet.AllPutApis.SegmentationFolderControllerPutApi@6f6745d6]" name="updateASegementfolder" class="com.ripplestreet.AllPutApis.SegmentationFolderControllerPutApi"/>
        <method signature="SegmentationJobControllerPutApi.createASegmentJob()[pri:208, instance:com.ripplestreet.AllPutApis.SegmentationJobControllerPutApi@27508c5d]" name="createASegmentJob" class="com.ripplestreet.AllPutApis.SegmentationJobControllerPutApi"/>
        <method signature="TriggerControllerPutApi.updateTriggerDefinition()[pri:209, instance:com.ripplestreet.AllPutApis.TriggerControllerPutApi@379614be]" name="updateTriggerDefinition" class="com.ripplestreet.AllPutApis.TriggerControllerPutApi"/>
      </group> <!-- segmentation -->
      <group name="event">
        <method signature="EventControllerGetApi.getAllEvents()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getAllEvents" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllCurrentMileStoneByEvent()[pri:1, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getAllCurrentMileStoneByEvent" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllMileStonesByEvent()[pri:3, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getAllMileStonesByEvent" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllProductByEvents()[pri:4, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getAllProductByEvents" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllServices()[pri:5, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getAllServices" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllSubscriptionsByEvent()[pri:6, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getAllSubscriptionsByEvent" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getAllSubscriptionsByServiceName()[pri:7, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getAllSubscriptionsByServiceName" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getEventById()[pri:8, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getEventById" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getEventDetailBySlug()[pri:9, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getEventDetailBySlug" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getProductDetailEventIdAndProductId()[pri:10, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getProductDetailEventIdAndProductId" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getpackAndApplicationCountByEventId()[pri:11, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getpackAndApplicationCountByEventId" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getByEventName()[pri:12, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getByEventName" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getCurrentMileStonesByEvent()[pri:13, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getCurrentMileStonesByEvent" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getEventDetailForWorkFlow()[pri:14, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getEventDetailForWorkFlow" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventFeedControllerGetApi.getFeedInfoById()[pri:14, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" name="getFeedInfoById" class="com.ripplestreet.AllGetApis.EventFeedControllerGetApi"/>
        <method signature="EventFeedControllerGetApi.getCommentFeedByEventId()[pri:15, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" name="getCommentFeedByEventId" class="com.ripplestreet.AllGetApis.EventFeedControllerGetApi"/>
        <method signature="EventFeedControllerGetApi.getAllFeedsForEvent()[pri:16, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" name="getAllFeedsForEvent" class="com.ripplestreet.AllGetApis.EventFeedControllerGetApi"/>
        <method signature="EventFeedControllerGetApi.getPhotoFeedByEventId()[pri:17, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" name="getPhotoFeedByEventId" class="com.ripplestreet.AllGetApis.EventFeedControllerGetApi"/>
        <method signature="EventFeedControllerGetApi.getReviewFeedByEventId()[pri:18, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" name="getReviewFeedByEventId" class="com.ripplestreet.AllGetApis.EventFeedControllerGetApi"/>
        <method signature="DiscussionControllerGetApi.getDiscussionListByFilters()[pri:55, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@4e928fbf]" name="getDiscussionListByFilters" class="com.ripplestreet.AllGetApis.DiscussionControllerGetApi"/>
        <method signature="DiscussionControllerGetApi.getDiscussion()[pri:56, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@4e928fbf]" name="getDiscussion" class="com.ripplestreet.AllGetApis.DiscussionControllerGetApi"/>
        <method signature="EventControllerGetApi.getFilteredEvents()[pri:189, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getFilteredEvents" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerGetApi.getEventMileStoneByIdAndDate()[pri:190, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" name="getEventMileStoneByIdAndDate" class="com.ripplestreet.AllGetApis.EventControllerGetApi"/>
        <method signature="EventControllerPutApi.updateComment()[pri:191, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" name="updateComment" class="com.ripplestreet.AllPutApis.EventControllerPutApi"/>
        <method signature="EventControllerPutApi.updateEventPacksCount()[pri:192, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" name="updateEventPacksCount" class="com.ripplestreet.AllPutApis.EventControllerPutApi"/>
        <method signature="EventControllerPutApi.updateEventSubscriptions()[pri:193, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" name="updateEventSubscriptions" class="com.ripplestreet.AllPutApis.EventControllerPutApi"/>
        <method signature="EventFeedControllerPutApi.likeAfeedById()[pri:194, instance:com.ripplestreet.AllPutApis.EventFeedControllerPutApi@1787bc24]" name="likeAfeedById" class="com.ripplestreet.AllPutApis.EventFeedControllerPutApi"/>
      </group> <!-- event -->
      <group name="reward-service">
        <method signature="OptInsControllerGetApi.getListOptInByEventId()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" name="getListOptInByEventId" class="com.ripplestreet.AllGetApis.OptInsControllerGetApi"/>
        <method signature="OptinInflightActivationControllerGetApi.getListOfAllocationTransientRecordByEventId()[pri:38, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@1cd629b3]" name="getListOfAllocationTransientRecordByEventId" class="com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi"/>
        <method signature="OptinInflightActivationControllerGetApi.getAllocationTransientRecordByEventIdAndPersonId()[pri:39, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@1cd629b3]" name="getAllocationTransientRecordByEventIdAndPersonId" class="com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi"/>
        <method signature="OptInsControllerGetApi.GetRewardCountByEventIdAndPreferenceforPerson()[pri:105, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" name="GetRewardCountByEventIdAndPreferenceforPerson" class="com.ripplestreet.AllGetApis.OptInsControllerGetApi"/>
        <method signature="OptInsControllerGetApi.getOptInById()[pri:106, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" name="getOptInById" class="com.ripplestreet.AllGetApis.OptInsControllerGetApi"/>
        <method signature="RewardAllocationcontrollerGetApi.getRewardAllocation()[pri:108, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@14a50707]" name="getRewardAllocation" class="com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi"/>
        <method signature="RewardCatalogControllerGetAPi.getAllRewardCatalogItems()[pri:110, instance:com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi@4d518b32]" name="getAllRewardCatalogItems" class="com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi"/>
        <method signature="RewardControllerGetApi.getRewardByName()[pri:111, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" name="getRewardByName" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardControllerGetApi.getReward()[pri:112, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" name="getReward" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardControllerGetApi.getAllReward()[pri:113, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" name="getAllReward" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardControllerGetApi.searchItems()[pri:114, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" name="searchItems" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardControllerGetApi.getRewardSummaryByEventId()[pri:115, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" name="getRewardSummaryByEventId" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardControllerGetApi.getRewardCount()[pri:116, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" name="getRewardCount" class="com.ripplestreet.AllGetApis.RewardControllerGetApi"/>
        <method signature="RewardDeliveryControllerGetApi.getDeliverySystemAttributeValue()[pri:117, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" name="getDeliverySystemAttributeValue" class="com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi"/>
        <method signature="RewardDeliveryControllerGetApi.getRewardDeleveries()[pri:118, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" name="getRewardDeleveries" class="com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi"/>
        <method signature="RewardDeliveryControllerGetApi.getRewardDeleverie()[pri:119, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" name="getRewardDeleverie" class="com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi"/>
        <method signature="RewardDeliveryControllerGetApi.getAllRewardDeliveriesByPersonId()[pri:120, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" name="getAllRewardDeliveriesByPersonId" class="com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi"/>
        <method signature="RewardsItemsControllerGetApi.getRewarditems()[pri:121, instance:com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi@7354b8c5]" name="getRewarditems" class="com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi"/>
        <method signature="RewardPreferencesControllerGetApi.getRewardPreferences()[pri:122, instance:com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi@329dbdbf]" name="getRewardPreferences" class="com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi"/>
        <method signature="SwagControllerGetApi.getSwag()[pri:123, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@2fba3fc4]" name="getSwag" class="com.ripplestreet.AllGetApis.SwagControllerGetApi"/>
        <method signature="SwagControllerGetApi.getSwagList()[pri:124, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@2fba3fc4]" name="getSwagList" class="com.ripplestreet.AllGetApis.SwagControllerGetApi"/>
        <method signature="TremendouesControllerGetApi.getTremendousCampaigns()[pri:125, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@1c852c0f]" name="getTremendousCampaigns" class="com.ripplestreet.AllGetApis.TremendouesControllerGetApi"/>
        <method signature="TremendouesControllerGetApi.getTremendousFundingSources()[pri:126, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@1c852c0f]" name="getTremendousFundingSources" class="com.ripplestreet.AllGetApis.TremendouesControllerGetApi"/>
        <method signature="optInsControllerPutApi.UpdateOtpIn()[pri:214, instance:com.ripplestreet.AllPutApis.optInsControllerPutApi@4a3631f8]" name="UpdateOtpIn" class="com.ripplestreet.AllPutApis.optInsControllerPutApi"/>
        <method signature="RewardAllocationControllerPutApi.UpdateAllocatedRewardItemStatus()[pri:215, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" name="UpdateAllocatedRewardItemStatus" class="com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi"/>
        <method signature="RewardAllocationControllerPutApi.UpdateAllocatedRewardItemToReadyForDelevery()[pri:216, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" name="UpdateAllocatedRewardItemToReadyForDelevery" class="com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi"/>
        <method signature="RewardAllocationControllerPutApi.updateRewarditemAllocation()[pri:217, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" name="updateRewarditemAllocation" class="com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi"/>
        <method signature="RewardDeliveryControllerPutApi.triggerReadyToDeliverAllocations()[pri:218, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" name="triggerReadyToDeliverAllocations" class="com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi"/>
        <method signature="RewardDeliveryControllerPutApi.createAndUpdateDeliverySystemAttributeValue()[pri:219, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" name="createAndUpdateDeliverySystemAttributeValue" class="com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi"/>
        <method signature="RewardDeliveryControllerPutApi.UpdateDelveryitemstatus()[pri:220, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" name="UpdateDelveryitemstatus" class="com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi"/>
        <method signature="RewardItemControllerPutApi.UpdateRewardIteams()[pri:221, instance:com.ripplestreet.AllPutApis.RewardItemControllerPutApi@42a15bdc]" name="UpdateRewardIteams" class="com.ripplestreet.AllPutApis.RewardItemControllerPutApi"/>
        <method signature="RewardItemControllerPutApi.UpdateRewardItemsSkuAlliases()[pri:222, instance:com.ripplestreet.AllPutApis.RewardItemControllerPutApi@42a15bdc]" name="UpdateRewardItemsSkuAlliases" class="com.ripplestreet.AllPutApis.RewardItemControllerPutApi"/>
        <method signature="RewardPreferencePutApi.updaterewardPreference()[pri:233, instance:com.ripplestreet.AllPutApis.RewardPreferencePutApi@44a59da3]" name="updaterewardPreference" class="com.ripplestreet.AllPutApis.RewardPreferencePutApi"/>
      </group> <!-- reward-service -->
    </groups>
    <test started-at="2023-07-14T16:50:18 IST" name="Test" finished-at="2023-07-14T16:56:31 IST" duration-ms="373823">
      <class name="com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@62833051]" started-at="2023-07-14T16:54:34 IST" name="BaseURI" finished-at="2023-07-14T16:54:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="findAllLinksForAnEvent()[pri:183, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@62833051]" started-at="2023-07-14T16:54:34 IST" name="findAllLinksForAnEvent" finished-at="2023-07-14T16:54:35 IST" duration-ms="1094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllLinksForAnEvent -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@62833051]" started-at="2023-07-14T16:54:35 IST" name="StatusCode" finished-at="2023-07-14T16:54:35 IST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@62833051]" started-at="2023-07-14T16:54:35 IST" name="BaseURI" finished-at="2023-07-14T16:54:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getLinkById()[pri:184, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@62833051]" started-at="2023-07-14T16:54:35 IST" name="getLinkById" finished-at="2023-07-14T16:54:36 IST" duration-ms="1123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLinkById -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi@62833051]" started-at="2023-07-14T16:54:36 IST" name="StatusCode" finished-at="2023-07-14T16:54:37 IST" duration-ms="280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TrackableLinkcontrollerGetApi -->
      <class name="com.ripplestreet.AllGetApis.AgencyControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@4ea5b703]" started-at="2023-07-14T16:53:33 IST" name="BaseURI" finished-at="2023-07-14T16:53:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="findAllAgencies()[pri:141, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@4ea5b703]" started-at="2023-07-14T16:53:33 IST" name="findAllAgencies" finished-at="2023-07-14T16:53:34 IST" duration-ms="1148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllAgencies -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@4ea5b703]" started-at="2023-07-14T16:53:34 IST" name="StatusCode" finished-at="2023-07-14T16:53:34 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAgencyById()[pri:142, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@4ea5b703]" started-at="2023-07-14T16:53:34 IST" name="getAgencyById" finished-at="2023-07-14T16:53:35 IST" duration-ms="1075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAgencyById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@4ea5b703]" started-at="2023-07-14T16:53:34 IST" name="BaseURI" finished-at="2023-07-14T16:53:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AgencyControllerGetApi@4ea5b703]" started-at="2023-07-14T16:53:35 IST" name="StatusCode" finished-at="2023-07-14T16:53:35 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AgencyControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi">
        <test-method signature="getAllFeedsForEvents()[pri:98, instance:com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi@495ee280]" started-at="2023-07-14T16:52:39 IST" name="getAllFeedsForEvents" finished-at="2023-07-14T16:52:40 IST" duration-ms="1217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllFeedsForEvents -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi@495ee280]" started-at="2023-07-14T16:52:39 IST" name="BaseURI" finished-at="2023-07-14T16:52:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi@495ee280]" started-at="2023-07-14T16:52:40 IST" name="StatusCode" finished-at="2023-07-14T16:52:40 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.CommonServiceFeedControllerGeApi -->
      <class name="com.ripplestreet.AllPutApis.AgencyControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.AgencyControllerPutApi@766653e6]" started-at="2023-07-14T16:55:52 IST" name="BaseURI" finished-at="2023-07-14T16:55:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateAgency()[pri:231, instance:com.ripplestreet.AllPutApis.AgencyControllerPutApi@766653e6]" started-at="2023-07-14T16:55:52 IST" name="updateAgency" finished-at="2023-07-14T16:55:54 IST" duration-ms="1686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAgency -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.AgencyControllerPutApi@766653e6]" started-at="2023-07-14T16:55:54 IST" name="StatusCode" finished-at="2023-07-14T16:55:54 IST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.AgencyControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.EventFeedControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:44 IST" name="BaseURI" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getFeedInfoById()[pri:14, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:44 IST" name="getFeedInfoById" finished-at="2023-07-14T16:50:45 IST" duration-ms="1114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFeedInfoById -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:45 IST" name="StatusCode" finished-at="2023-07-14T16:50:45 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getCommentFeedByEventId()[pri:15, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:45 IST" name="getCommentFeedByEventId" finished-at="2023-07-14T16:50:46 IST" duration-ms="1070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCommentFeedByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:45 IST" name="BaseURI" finished-at="2023-07-14T16:50:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:46 IST" name="StatusCode" finished-at="2023-07-14T16:50:46 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:46 IST" name="BaseURI" finished-at="2023-07-14T16:50:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllFeedsForEvent()[pri:16, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:46 IST" name="getAllFeedsForEvent" finished-at="2023-07-14T16:50:47 IST" duration-ms="1171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllFeedsForEvent -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:47 IST" name="StatusCode" finished-at="2023-07-14T16:50:48 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getPhotoFeedByEventId()[pri:17, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:48 IST" name="getPhotoFeedByEventId" finished-at="2023-07-14T16:50:49 IST" duration-ms="1092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPhotoFeedByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:48 IST" name="BaseURI" finished-at="2023-07-14T16:50:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:49 IST" name="StatusCode" finished-at="2023-07-14T16:50:49 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getReviewFeedByEventId()[pri:18, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:49 IST" name="getReviewFeedByEventId" finished-at="2023-07-14T16:50:50 IST" duration-ms="1150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReviewFeedByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:49 IST" name="BaseURI" finished-at="2023-07-14T16:50:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventFeedControllerGetApi@3e44f2a5]" started-at="2023-07-14T16:50:50 IST" name="StatusCode" finished-at="2023-07-14T16:50:50 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.EventFeedControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.EventTemplateControllerGetApi">
        <test-method signature="findAllEventTemplate()[pri:167, instance:com.ripplestreet.AllGetApis.EventTemplateControllerGetApi@295cf707]" started-at="2023-07-14T16:54:10 IST" name="findAllEventTemplate" finished-at="2023-07-14T16:54:12 IST" duration-ms="1344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllEventTemplate -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventTemplateControllerGetApi@295cf707]" started-at="2023-07-14T16:54:10 IST" name="BaseURI" finished-at="2023-07-14T16:54:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventTemplateControllerGetApi@295cf707]" started-at="2023-07-14T16:54:12 IST" name="StatusCode" finished-at="2023-07-14T16:54:12 IST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.EventTemplateControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.FAQSControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" started-at="2023-07-14T16:56:16 IST" name="BaseURI" finished-at="2023-07-14T16:56:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateFAQ()[pri:243, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" started-at="2023-07-14T16:56:16 IST" name="updateFAQ" finished-at="2023-07-14T16:56:17 IST" duration-ms="1200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateFAQ -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" started-at="2023-07-14T16:56:17 IST" name="StatusCode" finished-at="2023-07-14T16:56:17 IST" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="updateFAQTopicItems()[pri:244, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" started-at="2023-07-14T16:56:17 IST" name="updateFAQTopicItems" finished-at="2023-07-14T16:56:19 IST" duration-ms="1259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateFAQTopicItems -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" started-at="2023-07-14T16:56:17 IST" name="BaseURI" finished-at="2023-07-14T16:56:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" started-at="2023-07-14T16:56:19 IST" name="StatusCode" finished-at="2023-07-14T16:56:19 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="updateFAQTopics()[pri:245, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" started-at="2023-07-14T16:56:19 IST" name="updateFAQTopics" finished-at="2023-07-14T16:56:20 IST" duration-ms="1426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateFAQTopics -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" started-at="2023-07-14T16:56:19 IST" name="BaseURI" finished-at="2023-07-14T16:56:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.FAQSControllerPutApi@544d57e]" started-at="2023-07-14T16:56:20 IST" name="StatusCode" finished-at="2023-07-14T16:56:21 IST" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.FAQSControllerPutApi -->
      <class name="com.ripplestreet.AllPutApis.TrackerControllerGetApi">
        <test-method signature="updateActivityTrackerstatuses()[pri:201, instance:com.ripplestreet.AllPutApis.TrackerControllerGetApi@704deff2]" started-at="2023-07-14T16:55:00 IST" name="updateActivityTrackerstatuses" finished-at="2023-07-14T16:55:01 IST" duration-ms="1689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActivityTrackerstatuses -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.TrackerControllerGetApi@704deff2]" started-at="2023-07-14T16:55:00 IST" name="BaseURI" finished-at="2023-07-14T16:55:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.TrackerControllerGetApi@704deff2]" started-at="2023-07-14T16:55:01 IST" name="StatusCode" finished-at="2023-07-14T16:55:02 IST" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.TrackerControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.ReceiptControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.ReceiptControllerPutApi@f14a7d4]" started-at="2023-07-14T16:50:18 IST" name="BaseURI" finished-at="2023-07-14T16:50:18 IST" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="UpdateReceiptDatarecorder()[pri:0, instance:com.ripplestreet.AllPutApis.ReceiptControllerPutApi@f14a7d4]" started-at="2023-07-14T16:50:18 IST" name="UpdateReceiptDatarecorder" finished-at="2023-07-14T16:50:21 IST" duration-ms="2654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateReceiptDatarecorder -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.ReceiptControllerPutApi@f14a7d4]" started-at="2023-07-14T16:50:21 IST" name="StatusCode" finished-at="2023-07-14T16:50:21 IST" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="UpdateAreceiptRecord()[pri:212, instance:com.ripplestreet.AllPutApis.ReceiptControllerPutApi@f14a7d4]" started-at="2023-07-14T16:55:21 IST" name="UpdateAreceiptRecord" finished-at="2023-07-14T16:55:22 IST" duration-ms="1658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateAreceiptRecord -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.ReceiptControllerPutApi@f14a7d4]" started-at="2023-07-14T16:55:21 IST" name="BaseURI" finished-at="2023-07-14T16:55:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.ReceiptControllerPutApi@f14a7d4]" started-at="2023-07-14T16:55:22 IST" name="StatusCode" finished-at="2023-07-14T16:55:23 IST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.ReceiptControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.DraftEventControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@352ff4da]" started-at="2023-07-14T16:53:53 IST" name="BaseURI" finished-at="2023-07-14T16:53:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getListOfEventsBycampaignId()[pri:155, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@352ff4da]" started-at="2023-07-14T16:53:53 IST" name="getListOfEventsBycampaignId" finished-at="2023-07-14T16:53:54 IST" duration-ms="1472" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfEventsBycampaignId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@352ff4da]" started-at="2023-07-14T16:53:54 IST" name="StatusCode" finished-at="2023-07-14T16:53:54 IST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getDraftEventByEventId()[pri:156, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@352ff4da]" started-at="2023-07-14T16:53:54 IST" name="getDraftEventByEventId" finished-at="2023-07-14T16:53:56 IST" duration-ms="1497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDraftEventByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@352ff4da]" started-at="2023-07-14T16:53:54 IST" name="BaseURI" finished-at="2023-07-14T16:53:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.DraftEventControllerGetApi@352ff4da]" started-at="2023-07-14T16:53:56 IST" name="StatusCode" finished-at="2023-07-14T16:53:56 IST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.DraftEventControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.AssetControllerGetApi">
        <test-method signature="getAssetById()[pri:143, instance:com.ripplestreet.AllGetApis.AssetControllerGetApi@3fa247d1]" started-at="2023-07-14T16:53:35 IST" name="getAssetById" finished-at="2023-07-14T16:53:37 IST" duration-ms="1095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAssetById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AssetControllerGetApi@3fa247d1]" started-at="2023-07-14T16:53:35 IST" name="BaseURI" finished-at="2023-07-14T16:53:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AssetControllerGetApi@3fa247d1]" started-at="2023-07-14T16:53:37 IST" name="StatusCode" finished-at="2023-07-14T16:53:37 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AssetControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RecipientsController">
        <test-method signature="GetAllRecipientForCampaignId()[pri:140, instance:com.ripplestreet.AllGetApis.RecipientsController@50313382]" started-at="2023-07-14T16:53:32 IST" name="GetAllRecipientForCampaignId" finished-at="2023-07-14T16:53:33 IST" duration-ms="1095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllRecipientForCampaignId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RecipientsController@50313382]" started-at="2023-07-14T16:53:32 IST" name="BaseURI" finished-at="2023-07-14T16:53:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RecipientsController@50313382]" started-at="2023-07-14T16:53:33 IST" name="StatusCode" finished-at="2023-07-14T16:53:33 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RecipientsController -->
      <class name="com.ripplestreet.AllPutApis.AssetControllerPutApi">
        <test-method signature="softDeleteByAssetId()[pri:232, instance:com.ripplestreet.AllPutApis.AssetControllerPutApi@28b46423]" started-at="2023-07-14T16:55:54 IST" name="softDeleteByAssetId" finished-at="2023-07-14T16:55:55 IST" duration-ms="1596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- softDeleteByAssetId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.AssetControllerPutApi@28b46423]" started-at="2023-07-14T16:55:54 IST" name="BaseURI" finished-at="2023-07-14T16:55:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.AssetControllerPutApi@28b46423]" started-at="2023-07-14T16:55:55 IST" name="StatusCode" finished-at="2023-07-14T16:55:56 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.AssetControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.ApplicationControllerGetApi">
        <test-method signature="getAllApplications()[pri:19, instance:com.ripplestreet.AllGetApis.ApplicationControllerGetApi@2a7ed1f]" started-at="2023-07-14T16:50:50 IST" name="getAllApplications" finished-at="2023-07-14T16:50:51 IST" duration-ms="1111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllApplications -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ApplicationControllerGetApi@2a7ed1f]" started-at="2023-07-14T16:50:50 IST" name="BaseURI" finished-at="2023-07-14T16:50:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ApplicationControllerGetApi@2a7ed1f]" started-at="2023-07-14T16:50:51 IST" name="StatusCode" finished-at="2023-07-14T16:50:51 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ApplicationControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.ProductControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.ProductControllerPutApi@6b58b9e9]" started-at="2023-07-14T16:56:24 IST" name="BaseURI" finished-at="2023-07-14T16:56:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateEventproduct()[pri:248, instance:com.ripplestreet.AllPutApis.ProductControllerPutApi@6b58b9e9]" started-at="2023-07-14T16:56:24 IST" name="updateEventproduct" finished-at="2023-07-14T16:56:26 IST" duration-ms="1456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEventproduct -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.ProductControllerPutApi@6b58b9e9]" started-at="2023-07-14T16:56:26 IST" name="StatusCode" finished-at="2023-07-14T16:56:26 IST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="ProductSyndication()[pri:249, instance:com.ripplestreet.AllPutApis.ProductControllerPutApi@6b58b9e9]" started-at="2023-07-14T16:56:26 IST" name="ProductSyndication" finished-at="2023-07-14T16:56:28 IST" duration-ms="1593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductSyndication -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.ProductControllerPutApi@6b58b9e9]" started-at="2023-07-14T16:56:26 IST" name="BaseURI" finished-at="2023-07-14T16:56:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.ProductControllerPutApi@6b58b9e9]" started-at="2023-07-14T16:56:28 IST" name="StatusCode" finished-at="2023-07-14T16:56:28 IST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.ProductControllerPutApi -->
      <class name="com.ripplestreet.AllPutApis.TaskControllerPutApi">
        <test-method signature="updateTask()[pri:200, instance:com.ripplestreet.AllPutApis.TaskControllerPutApi@1e4d3ce5]" started-at="2023-07-14T16:54:58 IST" name="updateTask" finished-at="2023-07-14T16:55:00 IST" duration-ms="1682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTask -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.TaskControllerPutApi@1e4d3ce5]" started-at="2023-07-14T16:54:58 IST" name="BaseURI" finished-at="2023-07-14T16:54:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.TaskControllerPutApi@1e4d3ce5]" started-at="2023-07-14T16:55:00 IST" name="StatusCode" finished-at="2023-07-14T16:55:00 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.TaskControllerPutApi -->
      <class name="com.ripplestreet.AllPutApis.DraftEventControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.DraftEventControllerPutApi@1f81aa00]" started-at="2023-07-14T16:56:09 IST" name="BaseURI" finished-at="2023-07-14T16:56:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateDraftEvent()[pri:239, instance:com.ripplestreet.AllPutApis.DraftEventControllerPutApi@1f81aa00]" started-at="2023-07-14T16:56:09 IST" name="updateDraftEvent" finished-at="2023-07-14T16:56:11 IST" duration-ms="1485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateDraftEvent -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.DraftEventControllerPutApi@1f81aa00]" started-at="2023-07-14T16:56:11 IST" name="StatusCode" finished-at="2023-07-14T16:56:11 IST" duration-ms="248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.DraftEventControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.CommunityControllerGetApi">
        <test-method signature="getAllAddressEntriesByPersonId()[pri:23, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:50:56 IST" name="getAllAddressEntriesByPersonId" finished-at="2023-07-14T16:50:57 IST" duration-ms="1217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllAddressEntriesByPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:50:56 IST" name="BaseURI" finished-at="2023-07-14T16:50:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:50:57 IST" name="StatusCode" finished-at="2023-07-14T16:50:57 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllEventsByUserAndParticipantType()[pri:24, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:50:57 IST" name="getAllEventsByUserAndParticipantType" finished-at="2023-07-14T16:50:58 IST" duration-ms="1165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEventsByUserAndParticipantType -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:50:57 IST" name="BaseURI" finished-at="2023-07-14T16:50:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:50:58 IST" name="StatusCode" finished-at="2023-07-14T16:50:58 IST" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllUsersByEventAndParticipantType()[pri:25, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:50:58 IST" name="getAllUsersByEventAndParticipantType" finished-at="2023-07-14T16:50:59 IST" duration-ms="1119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllUsersByEventAndParticipantType -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:50:58 IST" name="BaseURI" finished-at="2023-07-14T16:50:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:50:59 IST" name="StatusCode" finished-at="2023-07-14T16:50:59 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GettingDetailOfHeadHostByPersonId()[pri:26, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:50:59 IST" name="GettingDetailOfHeadHostByPersonId" finished-at="2023-07-14T16:51:00 IST" duration-ms="1074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GettingDetailOfHeadHostByPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:50:59 IST" name="BaseURI" finished-at="2023-07-14T16:50:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:00 IST" name="StatusCode" finished-at="2023-07-14T16:51:01 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUserEventParticipationBit()[pri:27, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:01 IST" name="getUserEventParticipationBit" finished-at="2023-07-14T16:51:02 IST" duration-ms="1158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserEventParticipationBit -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:01 IST" name="BaseURI" finished-at="2023-07-14T16:51:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:02 IST" name="StatusCode" finished-at="2023-07-14T16:51:02 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUserListByFilters()[pri:28, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:02 IST" name="getUserListByFilters" finished-at="2023-07-14T16:51:16 IST" duration-ms="14142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserListByFilters -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:02 IST" name="BaseURI" finished-at="2023-07-14T16:51:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:16 IST" name="StatusCode" finished-at="2023-07-14T16:51:16 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:16 IST" name="BaseURI" finished-at="2023-07-14T16:51:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getUserParticipationBits()[pri:29, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:16 IST" name="getUserParticipationBits" finished-at="2023-07-14T16:51:17 IST" duration-ms="1107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserParticipationBits -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:17 IST" name="StatusCode" finished-at="2023-07-14T16:51:17 IST" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUserProfile()[pri:30, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:17 IST" name="getUserProfile" finished-at="2023-07-14T16:51:18 IST" duration-ms="1170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserProfile -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:17 IST" name="BaseURI" finished-at="2023-07-14T16:51:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:18 IST" name="StatusCode" finished-at="2023-07-14T16:51:18 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUserDetails()[pri:31, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:18 IST" name="getUserDetails" finished-at="2023-07-14T16:51:20 IST" duration-ms="1138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserDetails -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:18 IST" name="BaseURI" finished-at="2023-07-14T16:51:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CommunityControllerGetApi@4fa1c212]" started-at="2023-07-14T16:51:20 IST" name="StatusCode" finished-at="2023-07-14T16:51:20 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.CommunityControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.NotificationControllerPutApi">
        <test-method signature="deleteFileUploadByCampaignId()[pri:223, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:41 IST" name="deleteFileUploadByCampaignId" finished-at="2023-07-14T16:55:42 IST" duration-ms="1684" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteFileUploadByCampaignId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:41 IST" name="BaseURI" finished-at="2023-07-14T16:55:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:42 IST" name="StatusCode" finished-at="2023-07-14T16:55:43 IST" duration-ms="277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="resetNotificationReceipentId()[pri:224, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:43 IST" name="resetNotificationReceipentId" finished-at="2023-07-14T16:55:44 IST" duration-ms="1463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetNotificationReceipentId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:43 IST" name="BaseURI" finished-at="2023-07-14T16:55:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:44 IST" name="StatusCode" finished-at="2023-07-14T16:55:44 IST" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:44 IST" name="BaseURI" finished-at="2023-07-14T16:55:44 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="resetNotificationStatus()[pri:225, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:44 IST" name="resetNotificationStatus" finished-at="2023-07-14T16:55:46 IST" duration-ms="1599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetNotificationStatus -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:46 IST" name="StatusCode" finished-at="2023-07-14T16:55:46 IST" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:46 IST" name="BaseURI" finished-at="2023-07-14T16:55:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="sendPublishUnpublishNotification()[pri:226, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:46 IST" name="sendPublishUnpublishNotification" finished-at="2023-07-14T16:55:48 IST" duration-ms="1586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendPublishUnpublishNotification -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:48 IST" name="StatusCode" finished-at="2023-07-14T16:55:48 IST" duration-ms="264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="resetNotificationRecepientData()[pri:227, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:48 IST" name="resetNotificationRecepientData" finished-at="2023-07-14T16:55:50 IST" duration-ms="1558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetNotificationRecepientData -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:48 IST" name="BaseURI" finished-at="2023-07-14T16:55:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.NotificationControllerPutApi@26df6e3a]" started-at="2023-07-14T16:55:50 IST" name="StatusCode" finished-at="2023-07-14T16:55:50 IST" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.NotificationControllerPutApi -->
      <class name="com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi">
        <test-method signature="triggerReadyToDeliverAllocations()[pri:218, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" started-at="2023-07-14T16:55:32 IST" name="triggerReadyToDeliverAllocations" finished-at="2023-07-14T16:55:33 IST" duration-ms="1352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- triggerReadyToDeliverAllocations -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" started-at="2023-07-14T16:55:32 IST" name="BaseURI" finished-at="2023-07-14T16:55:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" started-at="2023-07-14T16:55:33 IST" name="StatusCode" finished-at="2023-07-14T16:55:33 IST" duration-ms="265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="createAndUpdateDeliverySystemAttributeValue()[pri:219, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" started-at="2023-07-14T16:55:33 IST" name="createAndUpdateDeliverySystemAttributeValue" finished-at="2023-07-14T16:55:35 IST" duration-ms="1549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAndUpdateDeliverySystemAttributeValue -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" started-at="2023-07-14T16:55:33 IST" name="BaseURI" finished-at="2023-07-14T16:55:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" started-at="2023-07-14T16:55:35 IST" name="StatusCode" finished-at="2023-07-14T16:55:35 IST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="UpdateDelveryitemstatus()[pri:220, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" started-at="2023-07-14T16:55:35 IST" name="UpdateDelveryitemstatus" finished-at="2023-07-14T16:55:37 IST" duration-ms="1570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateDelveryitemstatus -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" started-at="2023-07-14T16:55:35 IST" name="BaseURI" finished-at="2023-07-14T16:55:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi@2d9caaeb]" started-at="2023-07-14T16:55:37 IST" name="StatusCode" finished-at="2023-07-14T16:55:37 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.RewardDeliveryControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi">
        <test-method signature="getRewardAllocation()[pri:108, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@14a50707]" started-at="2023-07-14T16:52:50 IST" name="getRewardAllocation" finished-at="2023-07-14T16:52:51 IST" duration-ms="1242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardAllocation -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@14a50707]" started-at="2023-07-14T16:52:50 IST" name="BaseURI" finished-at="2023-07-14T16:52:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi@14a50707]" started-at="2023-07-14T16:52:51 IST" name="StatusCode" finished-at="2023-07-14T16:52:51 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardAllocationcontrollerGetApi -->
      <class name="com.ripplestreet.AllGetApis.UserAchievementControllerGetApi">
        <test-method signature="getUserAchivmentsDetails()[pri:66, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@266374ef]" started-at="2023-07-14T16:51:56 IST" name="getUserAchivmentsDetails" finished-at="2023-07-14T16:51:58 IST" duration-ms="1337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserAchivmentsDetails -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@266374ef]" started-at="2023-07-14T16:51:56 IST" name="BaseURI" finished-at="2023-07-14T16:51:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@266374ef]" started-at="2023-07-14T16:51:58 IST" name="StatusCode" finished-at="2023-07-14T16:51:58 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUserProgramsDetailes()[pri:67, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@266374ef]" started-at="2023-07-14T16:51:58 IST" name="getUserProgramsDetailes" finished-at="2023-07-14T16:51:59 IST" duration-ms="1244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserProgramsDetailes -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@266374ef]" started-at="2023-07-14T16:51:58 IST" name="BaseURI" finished-at="2023-07-14T16:51:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UserAchievementControllerGetApi@266374ef]" started-at="2023-07-14T16:51:59 IST" name="StatusCode" finished-at="2023-07-14T16:51:59 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.UserAchievementControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.TemplateControllerGetApi">
        <test-method signature="template()[pri:133, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:22 IST" name="template" finished-at="2023-07-14T16:53:23 IST" duration-ms="1190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- template -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:22 IST" name="BaseURI" finished-at="2023-07-14T16:53:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:23 IST" name="StatusCode" finished-at="2023-07-14T16:53:24 IST" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="AllEmailList()[pri:134, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:24 IST" name="AllEmailList" finished-at="2023-07-14T16:53:25 IST" duration-ms="1857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllEmailList -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:24 IST" name="BaseURI" finished-at="2023-07-14T16:53:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:25 IST" name="StatusCode" finished-at="2023-07-14T16:53:25 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:25 IST" name="BaseURI" finished-at="2023-07-14T16:53:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="PreviewTemplateContent()[pri:135, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:25 IST" name="PreviewTemplateContent" finished-at="2023-07-14T16:53:27 IST" duration-ms="1259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreviewTemplateContent -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:27 IST" name="StatusCode" finished-at="2023-07-14T16:53:27 IST" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GettemplateByTrasactionalType()[pri:136, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:27 IST" name="GettemplateByTrasactionalType" finished-at="2023-07-14T16:53:28 IST" duration-ms="1102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GettemplateByTrasactionalType -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:27 IST" name="BaseURI" finished-at="2023-07-14T16:53:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:28 IST" name="StatusCode" finished-at="2023-07-14T16:53:28 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="DownloadCSVLoader()[pri:137, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:28 IST" name="DownloadCSVLoader" finished-at="2023-07-14T16:53:29 IST" duration-ms="1241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DownloadCSVLoader -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:28 IST" name="BaseURI" finished-at="2023-07-14T16:53:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:29 IST" name="StatusCode" finished-at="2023-07-14T16:53:29 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetTemplateListByTransactionalTypeAndEventId()[pri:138, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:29 IST" name="GetTemplateListByTransactionalTypeAndEventId" finished-at="2023-07-14T16:53:31 IST" duration-ms="1093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetTemplateListByTransactionalTypeAndEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:29 IST" name="BaseURI" finished-at="2023-07-14T16:53:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:31 IST" name="StatusCode" finished-at="2023-07-14T16:53:31 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getTransactionalTemplateById()[pri:139, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:31 IST" name="getTransactionalTemplateById" finished-at="2023-07-14T16:53:32 IST" duration-ms="1154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTransactionalTemplateById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:31 IST" name="BaseURI" finished-at="2023-07-14T16:53:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TemplateControllerGetApi@1c39680d]" started-at="2023-07-14T16:53:32 IST" name="StatusCode" finished-at="2023-07-14T16:53:32 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TemplateControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.GameControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:32 IST" name="BaseURI" finished-at="2023-07-14T16:52:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllgames()[pri:92, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:32 IST" name="getAllgames" finished-at="2023-07-14T16:52:33 IST" duration-ms="1165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllgames -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:33 IST" name="StatusCode" finished-at="2023-07-14T16:52:33 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getGameBygameId()[pri:93, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:33 IST" name="getGameBygameId" finished-at="2023-07-14T16:52:34 IST" duration-ms="1115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGameBygameId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:33 IST" name="BaseURI" finished-at="2023-07-14T16:52:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:34 IST" name="StatusCode" finished-at="2023-07-14T16:52:34 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetGameTrackerRedisObjByGameId()[pri:94, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:34 IST" name="GetGameTrackerRedisObjByGameId" finished-at="2023-07-14T16:52:35 IST" duration-ms="1153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetGameTrackerRedisObjByGameId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:34 IST" name="BaseURI" finished-at="2023-07-14T16:52:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:35 IST" name="StatusCode" finished-at="2023-07-14T16:52:36 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:36 IST" name="BaseURI" finished-at="2023-07-14T16:52:36 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getWinningoptionBasedOnTheProbability()[pri:95, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:36 IST" name="getWinningoptionBasedOnTheProbability" finished-at="2023-07-14T16:52:37 IST" duration-ms="1081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWinningoptionBasedOnTheProbability -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.GameControllerGetApi@5f77d0f9]" started-at="2023-07-14T16:52:37 IST" name="StatusCode" finished-at="2023-07-14T16:52:37 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.GameControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.ReceiptControllerGetApi">
        <test-method signature="getReceiptRecordWithData()[pri:101, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@52815fa3]" started-at="2023-07-14T16:52:43 IST" name="getReceiptRecordWithData" finished-at="2023-07-14T16:52:44 IST" duration-ms="1147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReceiptRecordWithData -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@52815fa3]" started-at="2023-07-14T16:52:43 IST" name="BaseURI" finished-at="2023-07-14T16:52:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@52815fa3]" started-at="2023-07-14T16:52:44 IST" name="StatusCode" finished-at="2023-07-14T16:52:44 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getReceiptList()[pri:102, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@52815fa3]" started-at="2023-07-14T16:52:44 IST" name="getReceiptList" finished-at="2023-07-14T16:52:45 IST" duration-ms="1092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReceiptList -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@52815fa3]" started-at="2023-07-14T16:52:44 IST" name="BaseURI" finished-at="2023-07-14T16:52:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReceiptControllerGetApi@52815fa3]" started-at="2023-07-14T16:52:45 IST" name="StatusCode" finished-at="2023-07-14T16:52:45 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ReceiptControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.PreSignedURLControllerGetApi">
        <test-method signature="getAllFilesBynotificationId()[pri:133, instance:com.ripplestreet.AllGetApis.PreSignedURLControllerGetApi@4a00d9cf]" started-at="2023-07-14T16:53:21 IST" name="getAllFilesBynotificationId" finished-at="2023-07-14T16:53:22 IST" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllFilesBynotificationId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.PreSignedURLControllerGetApi@4a00d9cf]" started-at="2023-07-14T16:53:21 IST" name="BaseURI" finished-at="2023-07-14T16:53:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.PreSignedURLControllerGetApi@4a00d9cf]" started-at="2023-07-14T16:53:22 IST" name="StatusCode" finished-at="2023-07-14T16:53:22 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.PreSignedURLControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.ApplicationsControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.ApplicationsControllerPutApi@4e07b95f]" started-at="2023-07-14T16:50:36 IST" name="BaseURI" finished-at="2023-07-14T16:50:36 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateApplications()[pri:0, instance:com.ripplestreet.AllPutApis.ApplicationsControllerPutApi@4e07b95f]" started-at="2023-07-14T16:50:36 IST" name="updateApplications" finished-at="2023-07-14T16:50:36 IST" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateApplications -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.ApplicationsControllerPutApi@4e07b95f]" started-at="2023-07-14T16:50:36 IST" name="StatusCode" finished-at="2023-07-14T16:50:36 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.ApplicationsControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" started-at="2023-07-14T16:52:22 IST" name="BaseURI" finished-at="2023-07-14T16:52:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getGetSegmentDefinitionByFolderIdAndSegmentId()[pri:82, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" started-at="2023-07-14T16:52:22 IST" name="getGetSegmentDefinitionByFolderIdAndSegmentId" finished-at="2023-07-14T16:52:23 IST" duration-ms="1082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGetSegmentDefinitionByFolderIdAndSegmentId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" started-at="2023-07-14T16:52:23 IST" name="StatusCode" finished-at="2023-07-14T16:52:23 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" started-at="2023-07-14T16:52:23 IST" name="BaseURI" finished-at="2023-07-14T16:52:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllSegments()[pri:83, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" started-at="2023-07-14T16:52:23 IST" name="getAllSegments" finished-at="2023-07-14T16:52:24 IST" duration-ms="1138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSegments -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" started-at="2023-07-14T16:52:24 IST" name="StatusCode" finished-at="2023-07-14T16:52:24 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getSegmentDefinitionById()[pri:84, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" started-at="2023-07-14T16:52:24 IST" name="getSegmentDefinitionById" finished-at="2023-07-14T16:52:25 IST" duration-ms="1162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSegmentDefinitionById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" started-at="2023-07-14T16:52:24 IST" name="BaseURI" finished-at="2023-07-14T16:52:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2@11d8ae8b]" started-at="2023-07-14T16:52:25 IST" name="StatusCode" finished-at="2023-07-14T16:52:25 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SegmentationDefinitionControllerVersion2 -->
      <class name="com.ripplestreet.AllGetApis.EventDetailControllerGetApi">
        <test-method signature="getBasicEventDetailByEventID()[pri:157, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:53:56 IST" name="getBasicEventDetailByEventID" finished-at="2023-07-14T16:53:57 IST" duration-ms="1530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBasicEventDetailByEventID -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:53:56 IST" name="BaseURI" finished-at="2023-07-14T16:53:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:53:57 IST" name="StatusCode" finished-at="2023-07-14T16:53:57 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="findAllmileStonesByEvent()[pri:158, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:53:57 IST" name="findAllmileStonesByEvent" finished-at="2023-07-14T16:53:59 IST" duration-ms="1504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllmileStonesByEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:53:57 IST" name="BaseURI" finished-at="2023-07-14T16:53:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:53:59 IST" name="StatusCode" finished-at="2023-07-14T16:53:59 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="findMileStoneById()[pri:159, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:53:59 IST" name="findMileStoneById" finished-at="2023-07-14T16:54:01 IST" duration-ms="1518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findMileStoneById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:53:59 IST" name="BaseURI" finished-at="2023-07-14T16:53:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:54:01 IST" name="StatusCode" finished-at="2023-07-14T16:54:01 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getListoftargetsByEventId()[pri:160, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:54:01 IST" name="getListoftargetsByEventId" finished-at="2023-07-14T16:54:02 IST" duration-ms="1289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListoftargetsByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:54:01 IST" name="BaseURI" finished-at="2023-07-14T16:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:54:02 IST" name="StatusCode" finished-at="2023-07-14T16:54:02 IST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="findAllMilestonesTypeByEventtypes()[pri:161, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:54:02 IST" name="findAllMilestonesTypeByEventtypes" finished-at="2023-07-14T16:54:02 IST" duration-ms="10" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: eventType.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: eventType.
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor73.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:172)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at com.ripplestreet.AllGetApis.EventDetailControllerGetApi.findAllMilestonesTypeByEventtypes(EventDetailControllerGetApi.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllMilestonesTypeByEventtypes -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:54:02 IST" name="BaseURI" finished-at="2023-07-14T16:54:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventDetailControllerGetApi@748741cb]" started-at="2023-07-14T16:54:02 IST" name="StatusCode" finished-at="2023-07-14T16:54:02 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.EventDetailControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" started-at="2023-07-14T16:51:52 IST" name="BaseURI" finished-at="2023-07-14T16:51:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="GetListofAchievementPrograms()[pri:62, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" started-at="2023-07-14T16:51:52 IST" name="GetListofAchievementPrograms" finished-at="2023-07-14T16:51:53 IST" duration-ms="1083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListofAchievementPrograms -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" started-at="2023-07-14T16:51:53 IST" name="StatusCode" finished-at="2023-07-14T16:51:53 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetListOfAchievementProgramsforAchievementId()[pri:63, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" started-at="2023-07-14T16:51:53 IST" name="GetListOfAchievementProgramsforAchievementId" finished-at="2023-07-14T16:51:54 IST" duration-ms="1063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListOfAchievementProgramsforAchievementId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" started-at="2023-07-14T16:51:53 IST" name="BaseURI" finished-at="2023-07-14T16:51:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" started-at="2023-07-14T16:51:54 IST" name="StatusCode" finished-at="2023-07-14T16:51:54 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetAchievementProgram()[pri:64, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" started-at="2023-07-14T16:51:54 IST" name="GetAchievementProgram" finished-at="2023-07-14T16:51:55 IST" duration-ms="1065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAchievementProgram -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" started-at="2023-07-14T16:51:54 IST" name="BaseURI" finished-at="2023-07-14T16:51:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi@4d6025c5]" started-at="2023-07-14T16:51:55 IST" name="StatusCode" finished-at="2023-07-14T16:51:55 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AchievementProgramControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi">
        <test-method signature="getAllSegmentFolder()[pri:85, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@479cbee5]" started-at="2023-07-14T16:52:25 IST" name="getAllSegmentFolder" finished-at="2023-07-14T16:52:27 IST" duration-ms="1187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSegmentFolder -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@479cbee5]" started-at="2023-07-14T16:52:25 IST" name="BaseURI" finished-at="2023-07-14T16:52:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@479cbee5]" started-at="2023-07-14T16:52:27 IST" name="StatusCode" finished-at="2023-07-14T16:52:27 IST" duration-ms="491" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at jdk.internal.reflect.GeneratedMethodAccessor115.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@479cbee5]" started-at="2023-07-14T16:52:27 IST" name="BaseURI" finished-at="2023-07-14T16:52:27 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="GetSegmentFolderFromCampaignSegment()[pri:86, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@479cbee5]" started-at="2023-07-14T16:52:27 IST" name="GetSegmentFolderFromCampaignSegment" finished-at="2023-07-14T16:52:27 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at jdk.internal.reflect.GeneratedMethodAccessor115.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSegmentFolderFromCampaignSegment -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi@479cbee5]" started-at="2023-07-14T16:52:27 IST" name="StatusCode" finished-at="2023-07-14T16:52:27 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SegmentationFolderControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.TackableLinkControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.TackableLinkControllerPutApi@4b5189ac]" started-at="2023-07-14T16:56:30 IST" name="BaseURI" finished-at="2023-07-14T16:56:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateLink()[pri:251, instance:com.ripplestreet.AllPutApis.TackableLinkControllerPutApi@4b5189ac]" started-at="2023-07-14T16:56:30 IST" name="updateLink" finished-at="2023-07-14T16:56:31 IST" duration-ms="1505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateLink -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.TackableLinkControllerPutApi@4b5189ac]" started-at="2023-07-14T16:56:31 IST" name="StatusCode" finished-at="2023-07-14T16:56:31 IST" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.TackableLinkControllerPutApi -->
      <class name="com.ripplestreet.AllPutApis.CreativeControllerPutApi">
        <test-method signature="updateBannerIdandEventId()[pri:234, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:00 IST" name="updateBannerIdandEventId" finished-at="2023-07-14T16:56:02 IST" duration-ms="1498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBannerIdandEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:00 IST" name="BaseURI" finished-at="2023-07-14T16:56:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:02 IST" name="StatusCode" finished-at="2023-07-14T16:56:02 IST" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="updateFavors()[pri:235, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:02 IST" name="updateFavors" finished-at="2023-07-14T16:56:03 IST" duration-ms="1579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateFavors -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:02 IST" name="BaseURI" finished-at="2023-07-14T16:56:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:03 IST" name="StatusCode" finished-at="2023-07-14T16:56:04 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:04 IST" name="BaseURI" finished-at="2023-07-14T16:56:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="reOrganizeFavors()[pri:236, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:04 IST" name="reOrganizeFavors" finished-at="2023-07-14T16:56:05 IST" duration-ms="1552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reOrganizeFavors -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:05 IST" name="StatusCode" finished-at="2023-07-14T16:56:06 IST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:06 IST" name="BaseURI" finished-at="2023-07-14T16:56:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="UpdateHeroPlayListItems()[pri:237, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:06 IST" name="UpdateHeroPlayListItems" finished-at="2023-07-14T16:56:07 IST" duration-ms="1450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateHeroPlayListItems -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:07 IST" name="StatusCode" finished-at="2023-07-14T16:56:07 IST" duration-ms="265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="ReOrganizeHeroPlayListItems()[pri:238, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:07 IST" name="ReOrganizeHeroPlayListItems" finished-at="2023-07-14T16:56:09 IST" duration-ms="1475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReOrganizeHeroPlayListItems -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:07 IST" name="BaseURI" finished-at="2023-07-14T16:56:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.CreativeControllerPutApi@48c76607]" started-at="2023-07-14T16:56:09 IST" name="StatusCode" finished-at="2023-07-14T16:56:09 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.CreativeControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.RewardControllerGetApi">
        <test-method signature="getRewardByName()[pri:111, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:54 IST" name="getRewardByName" finished-at="2023-07-14T16:52:55 IST" duration-ms="1121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardByName -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:54 IST" name="BaseURI" finished-at="2023-07-14T16:52:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:55 IST" name="StatusCode" finished-at="2023-07-14T16:52:55 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:55 IST" name="BaseURI" finished-at="2023-07-14T16:52:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getReward()[pri:112, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:55 IST" name="getReward" finished-at="2023-07-14T16:52:56 IST" duration-ms="1138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReward -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:56 IST" name="StatusCode" finished-at="2023-07-14T16:52:56 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllReward()[pri:113, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:56 IST" name="getAllReward" finished-at="2023-07-14T16:52:57 IST" duration-ms="1160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllReward -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:56 IST" name="BaseURI" finished-at="2023-07-14T16:52:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:57 IST" name="StatusCode" finished-at="2023-07-14T16:52:57 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="searchItems()[pri:114, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:57 IST" name="searchItems" finished-at="2023-07-14T16:52:59 IST" duration-ms="1182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchItems -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:57 IST" name="BaseURI" finished-at="2023-07-14T16:52:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:59 IST" name="StatusCode" finished-at="2023-07-14T16:52:59 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getRewardSummaryByEventId()[pri:115, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:59 IST" name="getRewardSummaryByEventId" finished-at="2023-07-14T16:53:00 IST" duration-ms="1127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardSummaryByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:52:59 IST" name="BaseURI" finished-at="2023-07-14T16:52:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:53:00 IST" name="StatusCode" finished-at="2023-07-14T16:53:00 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getRewardCount()[pri:116, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:53:00 IST" name="getRewardCount" finished-at="2023-07-14T16:53:01 IST" duration-ms="1211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardCount -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:53:00 IST" name="BaseURI" finished-at="2023-07-14T16:53:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardControllerGetApi@4bd31064]" started-at="2023-07-14T16:53:01 IST" name="StatusCode" finished-at="2023-07-14T16:53:01 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.BenefitControllerGetApi">
        <test-method signature="GetListofBenefit()[pri:65, instance:com.ripplestreet.AllGetApis.BenefitControllerGetApi@5f0fd5a0]" started-at="2023-07-14T16:51:55 IST" name="GetListofBenefit" finished-at="2023-07-14T16:51:56 IST" duration-ms="1135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListofBenefit -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.BenefitControllerGetApi@5f0fd5a0]" started-at="2023-07-14T16:51:55 IST" name="BaseURI" finished-at="2023-07-14T16:51:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.BenefitControllerGetApi@5f0fd5a0]" started-at="2023-07-14T16:51:56 IST" name="StatusCode" finished-at="2023-07-14T16:51:56 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.BenefitControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.CreativeControllerGetApi">
        <test-method signature="findHeroPlaylistById()[pri:147, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:40 IST" name="findHeroPlaylistById" finished-at="2023-07-14T16:53:41 IST" duration-ms="1300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findHeroPlaylistById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:40 IST" name="BaseURI" finished-at="2023-07-14T16:53:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:41 IST" name="StatusCode" finished-at="2023-07-14T16:53:42 IST" duration-ms="95" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="findAllHeroPlaylistByModelId()[pri:148, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:42 IST" name="findAllHeroPlaylistByModelId" finished-at="2023-07-14T16:53:43 IST" duration-ms="1545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllHeroPlaylistByModelId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:42 IST" name="BaseURI" finished-at="2023-07-14T16:53:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:43 IST" name="StatusCode" finished-at="2023-07-14T16:53:43 IST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getBannerByEventIdandId()[pri:149, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:43 IST" name="getBannerByEventIdandId" finished-at="2023-07-14T16:53:45 IST" duration-ms="1477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBannerByEventIdandId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:43 IST" name="BaseURI" finished-at="2023-07-14T16:53:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:45 IST" name="StatusCode" finished-at="2023-07-14T16:53:45 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getFavorByEventIdAndId()[pri:150, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:45 IST" name="getFavorByEventIdAndId" finished-at="2023-07-14T16:53:46 IST" duration-ms="1445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFavorByEventIdAndId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:45 IST" name="BaseURI" finished-at="2023-07-14T16:53:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:46 IST" name="StatusCode" finished-at="2023-07-14T16:53:46 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="finAllBannerByEventId()[pri:151, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:46 IST" name="finAllBannerByEventId" finished-at="2023-07-14T16:53:48 IST" duration-ms="1409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finAllBannerByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:46 IST" name="BaseURI" finished-at="2023-07-14T16:53:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:48 IST" name="StatusCode" finished-at="2023-07-14T16:53:48 IST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="FinfAllfavousByEventId()[pri:152, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:48 IST" name="FinfAllfavousByEventId" finished-at="2023-07-14T16:53:49 IST" duration-ms="1325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FinfAllfavousByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:48 IST" name="BaseURI" finished-at="2023-07-14T16:53:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:49 IST" name="StatusCode" finished-at="2023-07-14T16:53:49 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="FindHeroplaylistitemById()[pri:153, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:49 IST" name="FindHeroplaylistitemById" finished-at="2023-07-14T16:53:51 IST" duration-ms="1471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FindHeroplaylistitemById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:49 IST" name="BaseURI" finished-at="2023-07-14T16:53:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:51 IST" name="StatusCode" finished-at="2023-07-14T16:53:51 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="findAllHeroPlaylistItemsByPlayListId()[pri:154, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:51 IST" name="findAllHeroPlaylistItemsByPlayListId" finished-at="2023-07-14T16:53:52 IST" duration-ms="1404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllHeroPlaylistItemsByPlayListId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:51 IST" name="BaseURI" finished-at="2023-07-14T16:53:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CreativeControllerGetApi@f627d13]" started-at="2023-07-14T16:53:52 IST" name="StatusCode" finished-at="2023-07-14T16:53:53 IST" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.CreativeControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi">
        <test-method signature="getRewardPreferences()[pri:122, instance:com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi@329dbdbf]" started-at="2023-07-14T16:53:07 IST" name="getRewardPreferences" finished-at="2023-07-14T16:53:09 IST" duration-ms="1133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardPreferences -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi@329dbdbf]" started-at="2023-07-14T16:53:07 IST" name="BaseURI" finished-at="2023-07-14T16:53:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi@329dbdbf]" started-at="2023-07-14T16:53:09 IST" name="StatusCode" finished-at="2023-07-14T16:53:09 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardPreferencesControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.LegalControllerPutrApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.LegalControllerPutrApi@797b0699]" started-at="2023-07-14T16:56:21 IST" name="BaseURI" finished-at="2023-07-14T16:56:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateLegalDisclaimer()[pri:246, instance:com.ripplestreet.AllPutApis.LegalControllerPutrApi@797b0699]" started-at="2023-07-14T16:56:21 IST" name="updateLegalDisclaimer" finished-at="2023-07-14T16:56:22 IST" duration-ms="1650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateLegalDisclaimer -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.LegalControllerPutrApi@797b0699]" started-at="2023-07-14T16:56:22 IST" name="StatusCode" finished-at="2023-07-14T16:56:22 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.LegalControllerPutrApi -->
      <class name="com.ripplestreet.AllPutApis.JobsControllerPutApi">
        <test-method signature="updateJob()[pri:211, instance:com.ripplestreet.AllPutApis.JobsControllerPutApi@53b7f657]" started-at="2023-07-14T16:55:19 IST" name="updateJob" finished-at="2023-07-14T16:55:20 IST" duration-ms="1485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateJob -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.JobsControllerPutApi@53b7f657]" started-at="2023-07-14T16:55:19 IST" name="BaseURI" finished-at="2023-07-14T16:55:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.JobsControllerPutApi@53b7f657]" started-at="2023-07-14T16:55:20 IST" name="StatusCode" finished-at="2023-07-14T16:55:21 IST" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.JobsControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.ReservationControllerGetApi">
        <test-method signature="GetUserStatusCountbyEventId()[pri:41, instance:com.ripplestreet.AllGetApis.ReservationControllerGetApi@1cb346ea]" started-at="2023-07-14T16:51:31 IST" name="GetUserStatusCountbyEventId" finished-at="2023-07-14T16:51:32 IST" duration-ms="1126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserStatusCountbyEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReservationControllerGetApi@1cb346ea]" started-at="2023-07-14T16:51:31 IST" name="BaseURI" finished-at="2023-07-14T16:51:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReservationControllerGetApi@1cb346ea]" started-at="2023-07-14T16:51:32 IST" name="StatusCode" finished-at="2023-07-14T16:51:32 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ReservationControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SwagControllerGetApi">
        <test-method signature="getSwag()[pri:123, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@2fba3fc4]" started-at="2023-07-14T16:53:09 IST" name="getSwag" finished-at="2023-07-14T16:53:10 IST" duration-ms="1038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSwag -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@2fba3fc4]" started-at="2023-07-14T16:53:09 IST" name="BaseURI" finished-at="2023-07-14T16:53:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@2fba3fc4]" started-at="2023-07-14T16:53:10 IST" name="StatusCode" finished-at="2023-07-14T16:53:10 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getSwagList()[pri:124, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@2fba3fc4]" started-at="2023-07-14T16:53:10 IST" name="getSwagList" finished-at="2023-07-14T16:53:11 IST" duration-ms="1129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSwagList -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@2fba3fc4]" started-at="2023-07-14T16:53:10 IST" name="BaseURI" finished-at="2023-07-14T16:53:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SwagControllerGetApi@2fba3fc4]" started-at="2023-07-14T16:53:11 IST" name="StatusCode" finished-at="2023-07-14T16:53:11 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SwagControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.AudienceControllerGetApi">
        <test-method signature="getParticipantsWithApplicationsForEvent()[pri:20, instance:com.ripplestreet.AllGetApis.AudienceControllerGetApi@2cb2fc20]" started-at="2023-07-14T16:50:51 IST" name="getParticipantsWithApplicationsForEvent" finished-at="2023-07-14T16:50:52 IST" duration-ms="1045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getParticipantsWithApplicationsForEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AudienceControllerGetApi@2cb2fc20]" started-at="2023-07-14T16:50:51 IST" name="BaseURI" finished-at="2023-07-14T16:50:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AudienceControllerGetApi@2cb2fc20]" started-at="2023-07-14T16:50:52 IST" name="StatusCode" finished-at="2023-07-14T16:50:52 IST" duration-ms="79" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AudienceControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi">
        <test-method signature="getAllSegmentJobsForSegmentId()[pri:87, instance:com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi@59e2d8e3]" started-at="2023-07-14T16:52:27 IST" name="getAllSegmentJobsForSegmentId" finished-at="2023-07-14T16:52:28 IST" duration-ms="1145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSegmentJobsForSegmentId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi@59e2d8e3]" started-at="2023-07-14T16:52:27 IST" name="BaseURI" finished-at="2023-07-14T16:52:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi@59e2d8e3]" started-at="2023-07-14T16:52:28 IST" name="StatusCode" finished-at="2023-07-14T16:52:28 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SegmentationJobsControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.FAQcontrollerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:02 IST" name="BaseURI" finished-at="2023-07-14T16:54:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getFAQbyEventId()[pri:163, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:02 IST" name="getFAQbyEventId" finished-at="2023-07-14T16:54:04 IST" duration-ms="1474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFAQbyEventId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:04 IST" name="StatusCode" finished-at="2023-07-14T16:54:04 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getFAQById()[pri:164, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:04 IST" name="getFAQById" finished-at="2023-07-14T16:54:05 IST" duration-ms="1494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFAQById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:04 IST" name="BaseURI" finished-at="2023-07-14T16:54:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:05 IST" name="StatusCode" finished-at="2023-07-14T16:54:05 IST" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetFAQDetailByEventIdforCommunity()[pri:165, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:05 IST" name="GetFAQDetailByEventIdforCommunity" finished-at="2023-07-14T16:54:07 IST" duration-ms="1543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetFAQDetailByEventIdforCommunity -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:05 IST" name="BaseURI" finished-at="2023-07-14T16:54:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:07 IST" name="StatusCode" finished-at="2023-07-14T16:54:07 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getlistofFaqTopicbyFaqId()[pri:166, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:07 IST" name="getlistofFaqTopicbyFaqId" finished-at="2023-07-14T16:54:09 IST" duration-ms="1422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getlistofFaqTopicbyFaqId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:07 IST" name="BaseURI" finished-at="2023-07-14T16:54:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:09 IST" name="StatusCode" finished-at="2023-07-14T16:54:09 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="FAQTopicByID()[pri:167, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:09 IST" name="FAQTopicByID" finished-at="2023-07-14T16:54:10 IST" duration-ms="1419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FAQTopicByID -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:09 IST" name="BaseURI" finished-at="2023-07-14T16:54:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:10 IST" name="StatusCode" finished-at="2023-07-14T16:54:10 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetlistofFaqTopicItemsbyFaqTopicId()[pri:168, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:12 IST" name="GetlistofFaqTopicItemsbyFaqTopicId" finished-at="2023-07-14T16:54:13 IST" duration-ms="1223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetlistofFaqTopicItemsbyFaqTopicId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:12 IST" name="BaseURI" finished-at="2023-07-14T16:54:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:13 IST" name="StatusCode" finished-at="2023-07-14T16:54:13 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:13 IST" name="BaseURI" finished-at="2023-07-14T16:54:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getFAQTopicitemsById()[pri:169, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:13 IST" name="getFAQTopicitemsById" finished-at="2023-07-14T16:54:14 IST" duration-ms="1293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFAQTopicitemsById -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.FAQcontrollerGetApi@1130520d]" started-at="2023-07-14T16:54:14 IST" name="StatusCode" finished-at="2023-07-14T16:54:14 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.FAQcontrollerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi">
        <test-method signature="getAllRewardCatalogItems()[pri:110, instance:com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi@4d518b32]" started-at="2023-07-14T16:52:51 IST" name="getAllRewardCatalogItems" finished-at="2023-07-14T16:52:54 IST" duration-ms="2294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllRewardCatalogItems -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi@4d518b32]" started-at="2023-07-14T16:52:51 IST" name="BaseURI" finished-at="2023-07-14T16:52:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi@4d518b32]" started-at="2023-07-14T16:52:54 IST" name="StatusCode" finished-at="2023-07-14T16:52:54 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardCatalogControllerGetAPi -->
      <class name="com.ripplestreet.AllPutApis.SegmentationJobControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.SegmentationJobControllerPutApi@27508c5d]" started-at="2023-07-14T16:55:14 IST" name="BaseURI" finished-at="2023-07-14T16:55:14 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="createASegmentJob()[pri:208, instance:com.ripplestreet.AllPutApis.SegmentationJobControllerPutApi@27508c5d]" started-at="2023-07-14T16:55:14 IST" name="createASegmentJob" finished-at="2023-07-14T16:55:15 IST" duration-ms="1598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createASegmentJob -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.SegmentationJobControllerPutApi@27508c5d]" started-at="2023-07-14T16:55:15 IST" name="StatusCode" finished-at="2023-07-14T16:55:15 IST" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.SegmentationJobControllerPutApi -->
      <class name="com.ripplestreet.AllPutApis.BenefitControllerPutApi">
        <test-method signature="updateBenefit()[pri:204, instance:com.ripplestreet.AllPutApis.BenefitControllerPutApi@7fc4780b]" started-at="2023-07-14T16:55:06 IST" name="updateBenefit" finished-at="2023-07-14T16:55:08 IST" duration-ms="1703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBenefit -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.BenefitControllerPutApi@7fc4780b]" started-at="2023-07-14T16:55:06 IST" name="BaseURI" finished-at="2023-07-14T16:55:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.BenefitControllerPutApi@7fc4780b]" started-at="2023-07-14T16:55:08 IST" name="StatusCode" finished-at="2023-07-14T16:55:08 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.BenefitControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.TaskControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@420a85c4]" started-at="2023-07-14T16:52:09 IST" name="BaseURI" finished-at="2023-07-14T16:52:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getListOfTasks()[pri:73, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@420a85c4]" started-at="2023-07-14T16:52:10 IST" name="getListOfTasks" finished-at="2023-07-14T16:52:11 IST" duration-ms="1105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfTasks -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@420a85c4]" started-at="2023-07-14T16:52:11 IST" name="StatusCode" finished-at="2023-07-14T16:52:11 IST" duration-ms="279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getTask()[pri:74, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@420a85c4]" started-at="2023-07-14T16:52:11 IST" name="getTask" finished-at="2023-07-14T16:52:12 IST" duration-ms="1063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTask -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@420a85c4]" started-at="2023-07-14T16:52:11 IST" name="BaseURI" finished-at="2023-07-14T16:52:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TaskControllerGetApi@420a85c4]" started-at="2023-07-14T16:52:12 IST" name="StatusCode" finished-at="2023-07-14T16:52:12 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TaskControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.MarketingGoalsPutApi">
        <test-method signature="updateMArketingGoalForEvent()[pri:247, instance:com.ripplestreet.AllPutApis.MarketingGoalsPutApi@5a37d3ed]" started-at="2023-07-14T16:56:22 IST" name="updateMArketingGoalForEvent" finished-at="2023-07-14T16:56:24 IST" duration-ms="1620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateMArketingGoalForEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.MarketingGoalsPutApi@5a37d3ed]" started-at="2023-07-14T16:56:22 IST" name="BaseURI" finished-at="2023-07-14T16:56:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.MarketingGoalsPutApi@5a37d3ed]" started-at="2023-07-14T16:56:24 IST" name="StatusCode" finished-at="2023-07-14T16:56:24 IST" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.MarketingGoalsPutApi -->
      <class name="com.ripplestreet.AllGetApis.RoleControllerGetApi">
        <test-method signature="getLlistOfPeopleByRoleID()[pri:174, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@20d7d6fb]" started-at="2023-07-14T16:54:21 IST" name="getLlistOfPeopleByRoleID" finished-at="2023-07-14T16:54:22 IST" duration-ms="1092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLlistOfPeopleByRoleID -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@20d7d6fb]" started-at="2023-07-14T16:54:21 IST" name="BaseURI" finished-at="2023-07-14T16:54:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@20d7d6fb]" started-at="2023-07-14T16:54:22 IST" name="StatusCode" finished-at="2023-07-14T16:54:22 IST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@20d7d6fb]" started-at="2023-07-14T16:54:22 IST" name="BaseURI" finished-at="2023-07-14T16:54:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getListOfRoles()[pri:175, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@20d7d6fb]" started-at="2023-07-14T16:54:22 IST" name="getListOfRoles" finished-at="2023-07-14T16:54:23 IST" duration-ms="1078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfRoles -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RoleControllerGetApi@20d7d6fb]" started-at="2023-07-14T16:54:23 IST" name="StatusCode" finished-at="2023-07-14T16:54:23 IST" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RoleControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.AchivementProgrameControllerPutApi">
        <test-method signature="updateAchivementPrograme()[pri:203, instance:com.ripplestreet.AllPutApis.AchivementProgrameControllerPutApi@7b7fdc8]" started-at="2023-07-14T16:55:04 IST" name="updateAchivementPrograme" finished-at="2023-07-14T16:55:06 IST" duration-ms="1673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAchivementPrograme -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.AchivementProgrameControllerPutApi@7b7fdc8]" started-at="2023-07-14T16:55:04 IST" name="BaseURI" finished-at="2023-07-14T16:55:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.AchivementProgrameControllerPutApi@7b7fdc8]" started-at="2023-07-14T16:55:06 IST" name="StatusCode" finished-at="2023-07-14T16:55:06 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.AchivementProgrameControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.TremendouesControllerGetApi">
        <test-method signature="getTremendousCampaigns()[pri:125, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@1c852c0f]" started-at="2023-07-14T16:53:11 IST" name="getTremendousCampaigns" finished-at="2023-07-14T16:53:13 IST" duration-ms="1621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTremendousCampaigns -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@1c852c0f]" started-at="2023-07-14T16:53:11 IST" name="BaseURI" finished-at="2023-07-14T16:53:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@1c852c0f]" started-at="2023-07-14T16:53:13 IST" name="StatusCode" finished-at="2023-07-14T16:53:13 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getTremendousFundingSources()[pri:126, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@1c852c0f]" started-at="2023-07-14T16:53:13 IST" name="getTremendousFundingSources" finished-at="2023-07-14T16:53:14 IST" duration-ms="1433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTremendousFundingSources -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@1c852c0f]" started-at="2023-07-14T16:53:13 IST" name="BaseURI" finished-at="2023-07-14T16:53:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TremendouesControllerGetApi@1c852c0f]" started-at="2023-07-14T16:53:14 IST" name="StatusCode" finished-at="2023-07-14T16:53:14 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TremendouesControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" started-at="2023-07-14T16:55:26 IST" name="BaseURI" finished-at="2023-07-14T16:55:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="UpdateAllocatedRewardItemStatus()[pri:215, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" started-at="2023-07-14T16:55:26 IST" name="UpdateAllocatedRewardItemStatus" finished-at="2023-07-14T16:55:28 IST" duration-ms="1595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateAllocatedRewardItemStatus -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" started-at="2023-07-14T16:55:28 IST" name="StatusCode" finished-at="2023-07-14T16:55:28 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="UpdateAllocatedRewardItemToReadyForDelevery()[pri:216, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" started-at="2023-07-14T16:55:28 IST" name="UpdateAllocatedRewardItemToReadyForDelevery" finished-at="2023-07-14T16:55:30 IST" duration-ms="1592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateAllocatedRewardItemToReadyForDelevery -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" started-at="2023-07-14T16:55:28 IST" name="BaseURI" finished-at="2023-07-14T16:55:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" started-at="2023-07-14T16:55:30 IST" name="StatusCode" finished-at="2023-07-14T16:55:30 IST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" started-at="2023-07-14T16:55:30 IST" name="BaseURI" finished-at="2023-07-14T16:55:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateRewarditemAllocation()[pri:217, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" started-at="2023-07-14T16:55:30 IST" name="updateRewarditemAllocation" finished-at="2023-07-14T16:55:32 IST" duration-ms="1675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateRewarditemAllocation -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi@79c97cb]" started-at="2023-07-14T16:55:32 IST" name="StatusCode" finished-at="2023-07-14T16:55:32 IST" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.RewardAllocationControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.IteratorGetApi">
        <test-method signature="discoverEventsByAllEventType()[pri:0, instance:com.ripplestreet.AllGetApis.IteratorGetApi@1b266842]" started-at="2023-07-14T16:50:21 IST" name="discoverEventsByAllEventType" finished-at="2023-07-14T16:50:27 IST" duration-ms="5601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discoverEventsByAllEventType -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.IteratorGetApi@1b266842]" started-at="2023-07-14T16:50:21 IST" name="BaseURI" finished-at="2023-07-14T16:50:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.IteratorGetApi@1b266842]" started-at="2023-07-14T16:50:27 IST" name="StatusCode" finished-at="2023-07-14T16:50:27 IST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.IteratorGetApi@1b266842]" started-at="2023-07-14T16:50:28 IST" name="BaseURI" finished-at="2023-07-14T16:50:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllAGamesByAllDirectionsUsingIterator()[pri:0, instance:com.ripplestreet.AllGetApis.IteratorGetApi@1b266842]" started-at="2023-07-14T16:50:28 IST" name="getAllAGamesByAllDirectionsUsingIterator" finished-at="2023-07-14T16:50:30 IST" duration-ms="2422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllAGamesByAllDirectionsUsingIterator -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.IteratorGetApi@1b266842]" started-at="2023-07-14T16:50:30 IST" name="StatusCode" finished-at="2023-07-14T16:50:30 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.IteratorGetApi -->
      <class name="com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi">
        <test-method signature="searchableFields()[pri:76, instance:com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi@723e88f9]" started-at="2023-07-14T16:52:15 IST" name="searchableFields" finished-at="2023-07-14T16:52:16 IST" duration-ms="1070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchableFields -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi@723e88f9]" started-at="2023-07-14T16:52:15 IST" name="BaseURI" finished-at="2023-07-14T16:52:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi@723e88f9]" started-at="2023-07-14T16:52:16 IST" name="StatusCode" finished-at="2023-07-14T16:52:16 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AudienceSearchControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.EventFeedControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.EventFeedControllerPutApi@1787bc24]" started-at="2023-07-14T16:54:47 IST" name="BaseURI" finished-at="2023-07-14T16:54:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="likeAfeedById()[pri:194, instance:com.ripplestreet.AllPutApis.EventFeedControllerPutApi@1787bc24]" started-at="2023-07-14T16:54:47 IST" name="likeAfeedById" finished-at="2023-07-14T16:54:49 IST" duration-ms="1567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- likeAfeedById -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.EventFeedControllerPutApi@1787bc24]" started-at="2023-07-14T16:54:49 IST" name="StatusCode" finished-at="2023-07-14T16:54:49 IST" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.EventFeedControllerPutApi -->
      <class name="com.ripplestreet.AllPutApis.ActivityControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.ActivityControllerPutApi@51c693d]" started-at="2023-07-14T16:54:52 IST" name="BaseURI" finished-at="2023-07-14T16:54:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="UpdateActivity()[pri:197, instance:com.ripplestreet.AllPutApis.ActivityControllerPutApi@51c693d]" started-at="2023-07-14T16:54:52 IST" name="UpdateActivity" finished-at="2023-07-14T16:54:53 IST" duration-ms="1587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateActivity -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.ActivityControllerPutApi@51c693d]" started-at="2023-07-14T16:54:53 IST" name="StatusCode" finished-at="2023-07-14T16:54:54 IST" duration-ms="265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.ActivityControllerPutApi@51c693d]" started-at="2023-07-14T16:54:54 IST" name="BaseURI" finished-at="2023-07-14T16:54:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="ReopenActivity()[pri:198, instance:com.ripplestreet.AllPutApis.ActivityControllerPutApi@51c693d]" started-at="2023-07-14T16:54:54 IST" name="ReopenActivity" finished-at="2023-07-14T16:54:55 IST" duration-ms="1678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReopenActivity -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.ActivityControllerPutApi@51c693d]" started-at="2023-07-14T16:54:55 IST" name="StatusCode" finished-at="2023-07-14T16:54:56 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.ActivityControllerPutApi -->
      <class name="com.ripplestreet.AllPutApis.templateControllerPutApi">
        <test-method signature="updateTransactionalTemplate()[pri:228, instance:com.ripplestreet.AllPutApis.templateControllerPutApi@3ddc6915]" started-at="2023-07-14T16:55:50 IST" name="updateTransactionalTemplate" finished-at="2023-07-14T16:55:52 IST" duration-ms="1554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTransactionalTemplate -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.templateControllerPutApi@3ddc6915]" started-at="2023-07-14T16:55:50 IST" name="BaseURI" finished-at="2023-07-14T16:55:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.templateControllerPutApi@3ddc6915]" started-at="2023-07-14T16:55:52 IST" name="StatusCode" finished-at="2023-07-14T16:55:52 IST" duration-ms="257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.templateControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@4f4c4b1a]" started-at="2023-07-14T16:50:52 IST" name="BaseURI" finished-at="2023-07-14T16:50:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getListOfAudiencePromotionJobsByEventId()[pri:21, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@4f4c4b1a]" started-at="2023-07-14T16:50:52 IST" name="getListOfAudiencePromotionJobsByEventId" finished-at="2023-07-14T16:50:53 IST" duration-ms="1196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfAudiencePromotionJobsByEventId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@4f4c4b1a]" started-at="2023-07-14T16:50:53 IST" name="StatusCode" finished-at="2023-07-14T16:50:54 IST" duration-ms="80" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getListOfInviteOnlyUsersByEventId()[pri:22, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@4f4c4b1a]" started-at="2023-07-14T16:50:54 IST" name="getListOfInviteOnlyUsersByEventId" finished-at="2023-07-14T16:50:56 IST" duration-ms="2083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfInviteOnlyUsersByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@4f4c4b1a]" started-at="2023-07-14T16:50:54 IST" name="BaseURI" finished-at="2023-07-14T16:50:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi@4f4c4b1a]" started-at="2023-07-14T16:50:56 IST" name="StatusCode" finished-at="2023-07-14T16:50:56 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AudiencePromotionControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.jobControllerGetApi">
        <test-method signature="getAllJobByTypeAndId()[pri:99, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@7a3793c7]" started-at="2023-07-14T16:52:40 IST" name="getAllJobByTypeAndId" finished-at="2023-07-14T16:52:41 IST" duration-ms="1125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllJobByTypeAndId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@7a3793c7]" started-at="2023-07-14T16:52:40 IST" name="BaseURI" finished-at="2023-07-14T16:52:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@7a3793c7]" started-at="2023-07-14T16:52:41 IST" name="StatusCode" finished-at="2023-07-14T16:52:42 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllListOfJobsBySourcetype()[pri:100, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@7a3793c7]" started-at="2023-07-14T16:52:42 IST" name="getAllListOfJobsBySourcetype" finished-at="2023-07-14T16:52:43 IST" duration-ms="1204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllListOfJobsBySourcetype -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@7a3793c7]" started-at="2023-07-14T16:52:42 IST" name="BaseURI" finished-at="2023-07-14T16:52:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.jobControllerGetApi@7a3793c7]" started-at="2023-07-14T16:52:43 IST" name="StatusCode" finished-at="2023-07-14T16:52:43 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.jobControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.RewardItemControllerPutApi">
        <test-method signature="UpdateRewardIteams()[pri:221, instance:com.ripplestreet.AllPutApis.RewardItemControllerPutApi@42a15bdc]" started-at="2023-07-14T16:55:37 IST" name="UpdateRewardIteams" finished-at="2023-07-14T16:55:39 IST" duration-ms="1597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateRewardIteams -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.RewardItemControllerPutApi@42a15bdc]" started-at="2023-07-14T16:55:37 IST" name="BaseURI" finished-at="2023-07-14T16:55:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.RewardItemControllerPutApi@42a15bdc]" started-at="2023-07-14T16:55:39 IST" name="StatusCode" finished-at="2023-07-14T16:55:39 IST" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="UpdateRewardItemsSkuAlliases()[pri:222, instance:com.ripplestreet.AllPutApis.RewardItemControllerPutApi@42a15bdc]" started-at="2023-07-14T16:55:39 IST" name="UpdateRewardItemsSkuAlliases" finished-at="2023-07-14T16:55:41 IST" duration-ms="1602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateRewardItemsSkuAlliases -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.RewardItemControllerPutApi@42a15bdc]" started-at="2023-07-14T16:55:39 IST" name="BaseURI" finished-at="2023-07-14T16:55:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.RewardItemControllerPutApi@42a15bdc]" started-at="2023-07-14T16:55:41 IST" name="StatusCode" finished-at="2023-07-14T16:55:41 IST" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.RewardItemControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.MobileAppControllerGetApi">
        <test-method signature="GetListOfMyActivities()[pri:75, instance:com.ripplestreet.AllGetApis.MobileAppControllerGetApi@4dd6fd0a]" started-at="2023-07-14T16:52:12 IST" name="GetListOfMyActivities" finished-at="2023-07-14T16:52:15 IST" duration-ms="2533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListOfMyActivities -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.MobileAppControllerGetApi@4dd6fd0a]" started-at="2023-07-14T16:52:12 IST" name="BaseURI" finished-at="2023-07-14T16:52:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.MobileAppControllerGetApi@4dd6fd0a]" started-at="2023-07-14T16:52:15 IST" name="StatusCode" finished-at="2023-07-14T16:52:15 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.MobileAppControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi">
        <test-method signature="GetListofActivityGroups()[pri:70, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" started-at="2023-07-14T16:52:01 IST" name="GetListofActivityGroups" finished-at="2023-07-14T16:52:02 IST" duration-ms="1718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListofActivityGroups -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" started-at="2023-07-14T16:52:01 IST" name="BaseURI" finished-at="2023-07-14T16:52:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" started-at="2023-07-14T16:52:03 IST" name="StatusCode" finished-at="2023-07-14T16:52:09 IST" duration-ms="6995" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at jdk.internal.reflect.GeneratedMethodAccessor115.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" started-at="2023-07-14T16:52:09 IST" name="BaseURI" finished-at="2023-07-14T16:52:09 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="GetActivityGroupsByyEventId()[pri:71, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" started-at="2023-07-14T16:52:09 IST" name="GetActivityGroupsByyEventId" finished-at="2023-07-14T16:52:09 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at jdk.internal.reflect.GeneratedMethodAccessor115.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetActivityGroupsByyEventId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" started-at="2023-07-14T16:52:09 IST" name="StatusCode" finished-at="2023-07-14T16:52:09 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" started-at="2023-07-14T16:52:09 IST" name="BaseURI" finished-at="2023-07-14T16:52:09 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="GetActivityGroup()[pri:72, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" started-at="2023-07-14T16:52:09 IST" name="GetActivityGroup" finished-at="2023-07-14T16:52:09 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at jdk.internal.reflect.GeneratedMethodAccessor115.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetActivityGroup -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi@407a7f2a]" started-at="2023-07-14T16:52:09 IST" name="StatusCode" finished-at="2023-07-14T16:52:09 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ActivityGroupControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.ActivityControllerGetApi">
        <test-method signature="getListOfActivities()[pri:68, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@7f284218]" started-at="2023-07-14T16:51:59 IST" name="getListOfActivities" finished-at="2023-07-14T16:52:01 IST" duration-ms="1364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfActivities -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@7f284218]" started-at="2023-07-14T16:51:59 IST" name="BaseURI" finished-at="2023-07-14T16:51:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@7f284218]" started-at="2023-07-14T16:52:01 IST" name="StatusCode" finished-at="2023-07-14T16:52:01 IST" duration-ms="255" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at jdk.internal.reflect.GeneratedMethodAccessor115.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@7f284218]" started-at="2023-07-14T16:52:01 IST" name="BaseURI" finished-at="2023-07-14T16:52:01 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getActivity()[pri:69, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@7f284218]" started-at="2023-07-14T16:52:01 IST" name="getActivity" finished-at="2023-07-14T16:52:01 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at jdk.internal.reflect.GeneratedMethodAccessor115.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActivity -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ActivityControllerGetApi@7f284218]" started-at="2023-07-14T16:52:01 IST" name="StatusCode" finished-at="2023-07-14T16:52:01 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ActivityControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.ReviewControllerGetApi">
        <test-method signature="getExternalReview()[pri:46, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" started-at="2023-07-14T16:51:36 IST" name="getExternalReview" finished-at="2023-07-14T16:51:37 IST" duration-ms="1182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExternalReview -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" started-at="2023-07-14T16:51:36 IST" name="BaseURI" finished-at="2023-07-14T16:51:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" started-at="2023-07-14T16:51:37 IST" name="StatusCode" finished-at="2023-07-14T16:51:37 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getReviewsByTaskId()[pri:47, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" started-at="2023-07-14T16:51:37 IST" name="getReviewsByTaskId" finished-at="2023-07-14T16:51:38 IST" duration-ms="1149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReviewsByTaskId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" started-at="2023-07-14T16:51:37 IST" name="BaseURI" finished-at="2023-07-14T16:51:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" started-at="2023-07-14T16:51:38 IST" name="StatusCode" finished-at="2023-07-14T16:51:38 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getReview()[pri:48, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" started-at="2023-07-14T16:51:38 IST" name="getReview" finished-at="2023-07-14T16:51:40 IST" duration-ms="1260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReview -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" started-at="2023-07-14T16:51:38 IST" name="BaseURI" finished-at="2023-07-14T16:51:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ReviewControllerGetApi@4c012563]" started-at="2023-07-14T16:51:40 IST" name="StatusCode" finished-at="2023-07-14T16:51:40 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ReviewControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.optInsControllerPutApi">
        <test-method signature="UpdateOtpIn()[pri:214, instance:com.ripplestreet.AllPutApis.optInsControllerPutApi@4a3631f8]" started-at="2023-07-14T16:55:24 IST" name="UpdateOtpIn" finished-at="2023-07-14T16:55:26 IST" duration-ms="1489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateOtpIn -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.optInsControllerPutApi@4a3631f8]" started-at="2023-07-14T16:55:24 IST" name="BaseURI" finished-at="2023-07-14T16:55:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.optInsControllerPutApi@4a3631f8]" started-at="2023-07-14T16:55:26 IST" name="StatusCode" finished-at="2023-07-14T16:55:26 IST" duration-ms="222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.optInsControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.UgcControllerGetApi">
        <test-method signature="downloadAsset()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:50:27 IST" name="downloadAsset" finished-at="2023-07-14T16:50:28 IST" duration-ms="1203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadAsset -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:50:27 IST" name="BaseURI" finished-at="2023-07-14T16:50:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:50:28 IST" name="StatusCode" finished-at="2023-07-14T16:50:28 IST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUgcDetailsByTaskId()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:50:33 IST" name="getUgcDetailsByTaskId" finished-at="2023-07-14T16:50:34 IST" duration-ms="1273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUgcDetailsByTaskId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:50:33 IST" name="BaseURI" finished-at="2023-07-14T16:50:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:50:34 IST" name="StatusCode" finished-at="2023-07-14T16:50:34 IST" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="downloadAssetByURL()[pri:51, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:51:40 IST" name="downloadAssetByURL" finished-at="2023-07-14T16:51:41 IST" duration-ms="1172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadAssetByURL -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:51:40 IST" name="BaseURI" finished-at="2023-07-14T16:51:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:51:41 IST" name="StatusCode" finished-at="2023-07-14T16:51:41 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getImageRecognitionResponse()[pri:52, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:51:41 IST" name="getImageRecognitionResponse" finished-at="2023-07-14T16:51:42 IST" duration-ms="1147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getImageRecognitionResponse -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:51:41 IST" name="BaseURI" finished-at="2023-07-14T16:51:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:51:42 IST" name="StatusCode" finished-at="2023-07-14T16:51:42 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUgcDetailsById()[pri:53, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:51:42 IST" name="getUgcDetailsById" finished-at="2023-07-14T16:51:43 IST" duration-ms="1156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUgcDetailsById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:51:42 IST" name="BaseURI" finished-at="2023-07-14T16:51:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UgcControllerGetApi@5d99c6b5]" started-at="2023-07-14T16:51:43 IST" name="StatusCode" finished-at="2023-07-14T16:51:43 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.UgcControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.reviewControllerPutApi">
        <test-method signature="updateExternalReview()[pri:195, instance:com.ripplestreet.AllPutApis.reviewControllerPutApi@29a5f4e7]" started-at="2023-07-14T16:54:49 IST" name="updateExternalReview" finished-at="2023-07-14T16:54:50 IST" duration-ms="167" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.apache.poi.xssf.usermodel.XSSFCell.getStringCellValue()" because "cell2" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFCell.getStringCellValue()" because "cell2" is null
at com.ripplestreet.AllPutApis.reviewControllerPutApi.updateExternalReview(reviewControllerPutApi.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateExternalReview -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.reviewControllerPutApi@29a5f4e7]" started-at="2023-07-14T16:54:49 IST" name="BaseURI" finished-at="2023-07-14T16:54:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.reviewControllerPutApi@29a5f4e7]" started-at="2023-07-14T16:54:50 IST" name="StatusCode" finished-at="2023-07-14T16:54:50 IST" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.reviewControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.ConfigurationController">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ConfigurationController@6ea2bc93]" started-at="2023-07-14T16:53:39 IST" name="BaseURI" finished-at="2023-07-14T16:53:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllconfigs()[pri:146, instance:com.ripplestreet.AllGetApis.ConfigurationController@6ea2bc93]" started-at="2023-07-14T16:53:39 IST" name="getAllconfigs" finished-at="2023-07-14T16:53:40 IST" duration-ms="1135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllconfigs -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ConfigurationController@6ea2bc93]" started-at="2023-07-14T16:53:40 IST" name="StatusCode" finished-at="2023-07-14T16:53:40 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ConfigurationController -->
      <class name="com.ripplestreet.AllGetApis.userFamilyControllerGetApi">
        <test-method signature="getUserChildern()[pri:42, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" started-at="2023-07-14T16:51:32 IST" name="getUserChildern" finished-at="2023-07-14T16:51:32 IST" duration-ms="443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserChildern -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" started-at="2023-07-14T16:51:32 IST" name="BaseURI" finished-at="2023-07-14T16:51:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" started-at="2023-07-14T16:51:32 IST" name="StatusCode" finished-at="2023-07-14T16:51:32 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllPetTypes()[pri:43, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" started-at="2023-07-14T16:51:32 IST" name="getAllPetTypes" finished-at="2023-07-14T16:51:33 IST" duration-ms="1123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllPetTypes -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" started-at="2023-07-14T16:51:32 IST" name="BaseURI" finished-at="2023-07-14T16:51:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" started-at="2023-07-14T16:51:33 IST" name="StatusCode" finished-at="2023-07-14T16:51:33 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllPetsForUser()[pri:44, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" started-at="2023-07-14T16:51:33 IST" name="getAllPetsForUser" finished-at="2023-07-14T16:51:35 IST" duration-ms="1139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllPetsForUser -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" started-at="2023-07-14T16:51:33 IST" name="BaseURI" finished-at="2023-07-14T16:51:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.userFamilyControllerGetApi@13b3d178]" started-at="2023-07-14T16:51:35 IST" name="StatusCode" finished-at="2023-07-14T16:51:35 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.userFamilyControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.ActivityGroupControllerPutApi">
        <test-method signature="updateActivityGroup()[pri:199, instance:com.ripplestreet.AllPutApis.ActivityGroupControllerPutApi@6a57ae10]" started-at="2023-07-14T16:54:56 IST" name="updateActivityGroup" finished-at="2023-07-14T16:54:58 IST" duration-ms="2004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateActivityGroup -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.ActivityGroupControllerPutApi@6a57ae10]" started-at="2023-07-14T16:54:56 IST" name="BaseURI" finished-at="2023-07-14T16:54:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.ActivityGroupControllerPutApi@6a57ae10]" started-at="2023-07-14T16:54:58 IST" name="StatusCode" finished-at="2023-07-14T16:54:58 IST" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.ActivityGroupControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.gameOptionControllerGetApi">
        <test-method signature="getGameOptionBySlug()[pri:96, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@463fd068]" started-at="2023-07-14T16:52:37 IST" name="getGameOptionBySlug" finished-at="2023-07-14T16:52:38 IST" duration-ms="1103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGameOptionBySlug -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@463fd068]" started-at="2023-07-14T16:52:37 IST" name="BaseURI" finished-at="2023-07-14T16:52:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@463fd068]" started-at="2023-07-14T16:52:38 IST" name="StatusCode" finished-at="2023-07-14T16:52:38 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getListOfOptionsByGameId()[pri:97, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@463fd068]" started-at="2023-07-14T16:52:38 IST" name="getListOfOptionsByGameId" finished-at="2023-07-14T16:52:39 IST" duration-ms="1146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfOptionsByGameId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@463fd068]" started-at="2023-07-14T16:52:38 IST" name="BaseURI" finished-at="2023-07-14T16:52:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.gameOptionControllerGetApi@463fd068]" started-at="2023-07-14T16:52:39 IST" name="StatusCode" finished-at="2023-07-14T16:52:39 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.gameOptionControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi">
        <test-method signature="getDeliverySystemAttributeValue()[pri:117, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:01 IST" name="getDeliverySystemAttributeValue" finished-at="2023-07-14T16:53:02 IST" duration-ms="1225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDeliverySystemAttributeValue -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:01 IST" name="BaseURI" finished-at="2023-07-14T16:53:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:02 IST" name="StatusCode" finished-at="2023-07-14T16:53:02 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:02 IST" name="BaseURI" finished-at="2023-07-14T16:53:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getRewardDeleveries()[pri:118, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:02 IST" name="getRewardDeleveries" finished-at="2023-07-14T16:53:04 IST" duration-ms="1173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardDeleveries -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:04 IST" name="StatusCode" finished-at="2023-07-14T16:53:04 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getRewardDeleverie()[pri:119, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:04 IST" name="getRewardDeleverie" finished-at="2023-07-14T16:53:05 IST" duration-ms="1156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewardDeleverie -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:04 IST" name="BaseURI" finished-at="2023-07-14T16:53:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:05 IST" name="StatusCode" finished-at="2023-07-14T16:53:05 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllRewardDeliveriesByPersonId()[pri:120, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:05 IST" name="getAllRewardDeliveriesByPersonId" finished-at="2023-07-14T16:53:06 IST" duration-ms="1352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllRewardDeliveriesByPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:05 IST" name="BaseURI" finished-at="2023-07-14T16:53:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi@e3c0e40]" started-at="2023-07-14T16:53:06 IST" name="StatusCode" finished-at="2023-07-14T16:53:06 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardDeliveryControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.OptInsControllerGetApi">
        <test-method signature="getListOptInByEventId()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" started-at="2023-07-14T16:50:32 IST" name="getListOptInByEventId" finished-at="2023-07-14T16:50:33 IST" duration-ms="1252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOptInByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" started-at="2023-07-14T16:50:32 IST" name="BaseURI" finished-at="2023-07-14T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" started-at="2023-07-14T16:50:33 IST" name="StatusCode" finished-at="2023-07-14T16:50:33 IST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetRewardCountByEventIdAndPreferenceforPerson()[pri:105, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" started-at="2023-07-14T16:52:48 IST" name="GetRewardCountByEventIdAndPreferenceforPerson" finished-at="2023-07-14T16:52:49 IST" duration-ms="1118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetRewardCountByEventIdAndPreferenceforPerson -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" started-at="2023-07-14T16:52:48 IST" name="BaseURI" finished-at="2023-07-14T16:52:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" started-at="2023-07-14T16:52:49 IST" name="StatusCode" finished-at="2023-07-14T16:52:49 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getOptInById()[pri:106, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" started-at="2023-07-14T16:52:49 IST" name="getOptInById" finished-at="2023-07-14T16:52:50 IST" duration-ms="1066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOptInById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" started-at="2023-07-14T16:52:49 IST" name="BaseURI" finished-at="2023-07-14T16:52:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.OptInsControllerGetApi@589da3f3]" started-at="2023-07-14T16:52:50 IST" name="StatusCode" finished-at="2023-07-14T16:52:50 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.OptInsControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.RewardPreferencePutApi">
        <test-method signature="updaterewardPreference()[pri:233, instance:com.ripplestreet.AllPutApis.RewardPreferencePutApi@44a59da3]" started-at="2023-07-14T16:55:57 IST" name="updaterewardPreference" finished-at="2023-07-14T16:56:00 IST" duration-ms="2429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updaterewardPreference -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.RewardPreferencePutApi@44a59da3]" started-at="2023-07-14T16:55:57 IST" name="BaseURI" finished-at="2023-07-14T16:55:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.RewardPreferencePutApi@44a59da3]" started-at="2023-07-14T16:56:00 IST" name="StatusCode" finished-at="2023-07-14T16:56:00 IST" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.RewardPreferencePutApi -->
      <class name="com.ripplestreet.AllPutApis.EventControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" started-at="2023-07-14T16:54:42 IST" name="BaseURI" finished-at="2023-07-14T16:54:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateComment()[pri:191, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" started-at="2023-07-14T16:54:42 IST" name="updateComment" finished-at="2023-07-14T16:54:44 IST" duration-ms="1418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateComment -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" started-at="2023-07-14T16:54:44 IST" name="StatusCode" finished-at="2023-07-14T16:54:44 IST" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="updateEventPacksCount()[pri:192, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" started-at="2023-07-14T16:54:44 IST" name="updateEventPacksCount" finished-at="2023-07-14T16:54:45 IST" duration-ms="1529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEventPacksCount -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" started-at="2023-07-14T16:54:44 IST" name="BaseURI" finished-at="2023-07-14T16:54:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" started-at="2023-07-14T16:54:45 IST" name="StatusCode" finished-at="2023-07-14T16:54:46 IST" duration-ms="264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="updateEventSubscriptions()[pri:193, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" started-at="2023-07-14T16:54:46 IST" name="updateEventSubscriptions" finished-at="2023-07-14T16:54:47 IST" duration-ms="1475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEventSubscriptions -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" started-at="2023-07-14T16:54:46 IST" name="BaseURI" finished-at="2023-07-14T16:54:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.EventControllerPutApi@6b6776cb]" started-at="2023-07-14T16:54:47 IST" name="StatusCode" finished-at="2023-07-14T16:54:47 IST" duration-ms="273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.EventControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.TargetsControllerGetApi">
        <test-method signature="getAlltargets()[pri:182, instance:com.ripplestreet.AllGetApis.TargetsControllerGetApi@4bf48f6]" started-at="2023-07-14T16:54:33 IST" name="getAlltargets" finished-at="2023-07-14T16:54:34 IST" duration-ms="1115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAlltargets -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TargetsControllerGetApi@4bf48f6]" started-at="2023-07-14T16:54:33 IST" name="BaseURI" finished-at="2023-07-14T16:54:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TargetsControllerGetApi@4bf48f6]" started-at="2023-07-14T16:54:34 IST" name="StatusCode" finished-at="2023-07-14T16:54:34 IST" duration-ms="290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TargetsControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.DiscussionControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.DiscussionControllerPutApi@43599640]" started-at="2023-07-14T16:54:50 IST" name="BaseURI" finished-at="2023-07-14T16:54:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateAdminDiscussion()[pri:196, instance:com.ripplestreet.AllPutApis.DiscussionControllerPutApi@43599640]" started-at="2023-07-14T16:54:50 IST" name="updateAdminDiscussion" finished-at="2023-07-14T16:54:52 IST" duration-ms="1692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAdminDiscussion -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.DiscussionControllerPutApi@43599640]" started-at="2023-07-14T16:54:52 IST" name="StatusCode" finished-at="2023-07-14T16:54:52 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.DiscussionControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi">
        <test-method signature="getAllEventsByUserAndParticipantTypeApplicant()[pri:36, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@bb9e6dc]" started-at="2023-07-14T16:51:25 IST" name="getAllEventsByUserAndParticipantTypeApplicant" finished-at="2023-07-14T16:51:26 IST" duration-ms="1105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEventsByUserAndParticipantTypeApplicant -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@bb9e6dc]" started-at="2023-07-14T16:51:25 IST" name="BaseURI" finished-at="2023-07-14T16:51:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@bb9e6dc]" started-at="2023-07-14T16:51:26 IST" name="StatusCode" finished-at="2023-07-14T16:51:26 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@bb9e6dc]" started-at="2023-07-14T16:51:26 IST" name="BaseURI" finished-at="2023-07-14T16:51:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getActiveEventsDetailForUser()[pri:37, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@bb9e6dc]" started-at="2023-07-14T16:51:26 IST" name="getActiveEventsDetailForUser" finished-at="2023-07-14T16:51:27 IST" duration-ms="1136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActiveEventsDetailForUser -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi@bb9e6dc]" started-at="2023-07-14T16:51:27 IST" name="StatusCode" finished-at="2023-07-14T16:51:27 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.MobileCommunityControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi">
        <test-method signature="getEventWorkflowTemplateByEventId()[pri:185, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" started-at="2023-07-14T16:54:37 IST" name="getEventWorkflowTemplateByEventId" finished-at="2023-07-14T16:54:38 IST" duration-ms="1375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventWorkflowTemplateByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" started-at="2023-07-14T16:54:37 IST" name="BaseURI" finished-at="2023-07-14T16:54:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" started-at="2023-07-14T16:54:38 IST" name="StatusCode" finished-at="2023-07-14T16:54:38 IST" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getListOfWorkFlowTemplates()[pri:186, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" started-at="2023-07-14T16:54:38 IST" name="getListOfWorkFlowTemplates" finished-at="2023-07-14T16:54:40 IST" duration-ms="1349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfWorkFlowTemplates -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" started-at="2023-07-14T16:54:38 IST" name="BaseURI" finished-at="2023-07-14T16:54:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" started-at="2023-07-14T16:54:40 IST" name="StatusCode" finished-at="2023-07-14T16:54:40 IST" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" started-at="2023-07-14T16:54:40 IST" name="BaseURI" finished-at="2023-07-14T16:54:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getStepFunctionByArn()[pri:187, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" started-at="2023-07-14T16:54:40 IST" name="getStepFunctionByArn" finished-at="2023-07-14T16:54:40 IST" duration-ms="9" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: workflowTemplateId.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: workflowTemplateId.
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1277)
at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:176)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1161)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor73.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1348)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1103)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1009)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:792)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:172)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi.getStepFunctionByArn(WorkFlowTemplateControllerGetApi.java:34)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStepFunctionByArn -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi@37fb0bed]" started-at="2023-07-14T16:54:40 IST" name="StatusCode" finished-at="2023-07-14T16:54:40 IST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.WorkFlowTemplateControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.TriggerControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.TriggerControllerPutApi@379614be]" started-at="2023-07-14T16:55:15 IST" name="BaseURI" finished-at="2023-07-14T16:55:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateTriggerDefinition()[pri:209, instance:com.ripplestreet.AllPutApis.TriggerControllerPutApi@379614be]" started-at="2023-07-14T16:55:15 IST" name="updateTriggerDefinition" finished-at="2023-07-14T16:55:17 IST" duration-ms="1600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTriggerDefinition -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.TriggerControllerPutApi@379614be]" started-at="2023-07-14T16:55:17 IST" name="StatusCode" finished-at="2023-07-14T16:55:17 IST" duration-ms="248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.TriggerControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.ProductControllerGetApi">
        <test-method signature="getListOfProdutsByEventID()[pri:172, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@6736fa8d]" started-at="2023-07-14T16:54:18 IST" name="getListOfProdutsByEventID" finished-at="2023-07-14T16:54:19 IST" duration-ms="1295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfProdutsByEventID -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@6736fa8d]" started-at="2023-07-14T16:54:18 IST" name="BaseURI" finished-at="2023-07-14T16:54:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@6736fa8d]" started-at="2023-07-14T16:54:19 IST" name="StatusCode" finished-at="2023-07-14T16:54:19 IST" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getProductsById()[pri:173, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@6736fa8d]" started-at="2023-07-14T16:54:19 IST" name="getProductsById" finished-at="2023-07-14T16:54:20 IST" duration-ms="1152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductsById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@6736fa8d]" started-at="2023-07-14T16:54:19 IST" name="BaseURI" finished-at="2023-07-14T16:54:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.ProductControllerGetApi@6736fa8d]" started-at="2023-07-14T16:54:20 IST" name="StatusCode" finished-at="2023-07-14T16:54:21 IST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.ProductControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi">
        <test-method signature="getMarketingGoalsForEvent()[pri:171, instance:com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi@651aed93]" started-at="2023-07-14T16:54:16 IST" name="getMarketingGoalsForEvent" finished-at="2023-07-14T16:54:17 IST" duration-ms="1246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMarketingGoalsForEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi@651aed93]" started-at="2023-07-14T16:54:16 IST" name="BaseURI" finished-at="2023-07-14T16:54:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi@651aed93]" started-at="2023-07-14T16:54:17 IST" name="StatusCode" finished-at="2023-07-14T16:54:18 IST" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.MarketingGoalsControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.RecipientsControllerPutApi">
        <test-method signature="deleteRecipientsByCampaignId()[pri:213, instance:com.ripplestreet.AllPutApis.RecipientsControllerPutApi@52e7a6b2]" started-at="2023-07-14T16:55:23 IST" name="deleteRecipientsByCampaignId" finished-at="2023-07-14T16:55:24 IST" duration-ms="1480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteRecipientsByCampaignId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.RecipientsControllerPutApi@52e7a6b2]" started-at="2023-07-14T16:55:23 IST" name="BaseURI" finished-at="2023-07-14T16:55:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.RecipientsControllerPutApi@52e7a6b2]" started-at="2023-07-14T16:55:24 IST" name="StatusCode" finished-at="2023-07-14T16:55:24 IST" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.RecipientsControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.storesControllerGetApi">
        <test-method signature="getAllStoreCollection()[pri:103, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@5d43661b]" started-at="2023-07-14T16:52:45 IST" name="getAllStoreCollection" finished-at="2023-07-14T16:52:46 IST" duration-ms="1269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllStoreCollection -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@5d43661b]" started-at="2023-07-14T16:52:45 IST" name="BaseURI" finished-at="2023-07-14T16:52:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@5d43661b]" started-at="2023-07-14T16:52:46 IST" name="StatusCode" finished-at="2023-07-14T16:52:47 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getStoreListByCollectionName()[pri:104, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@5d43661b]" started-at="2023-07-14T16:52:47 IST" name="getStoreListByCollectionName" finished-at="2023-07-14T16:52:48 IST" duration-ms="1160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStoreListByCollectionName -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@5d43661b]" started-at="2023-07-14T16:52:47 IST" name="BaseURI" finished-at="2023-07-14T16:52:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.storesControllerGetApi@5d43661b]" started-at="2023-07-14T16:52:48 IST" name="StatusCode" finished-at="2023-07-14T16:52:48 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.storesControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.PartyControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.PartyControllerGetApi@39d76cb5]" started-at="2023-07-14T16:51:29 IST" name="BaseURI" finished-at="2023-07-14T16:51:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getlistofparties()[pri:40, instance:com.ripplestreet.AllGetApis.PartyControllerGetApi@39d76cb5]" started-at="2023-07-14T16:51:29 IST" name="getlistofparties" finished-at="2023-07-14T16:51:31 IST" duration-ms="1122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getlistofparties -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.PartyControllerGetApi@39d76cb5]" started-at="2023-07-14T16:51:31 IST" name="StatusCode" finished-at="2023-07-14T16:51:31 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.PartyControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SocialShareControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@2b72cb8a]" started-at="2023-07-14T16:51:46 IST" name="BaseURI" finished-at="2023-07-14T16:51:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getReview()[pri:57, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@2b72cb8a]" started-at="2023-07-14T16:51:46 IST" name="getReview" finished-at="2023-07-14T16:51:47 IST" duration-ms="1080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReview -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@2b72cb8a]" started-at="2023-07-14T16:51:47 IST" name="StatusCode" finished-at="2023-07-14T16:51:47 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllReviews()[pri:58, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@2b72cb8a]" started-at="2023-07-14T16:51:47 IST" name="getAllReviews" finished-at="2023-07-14T16:51:48 IST" duration-ms="1170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllReviews -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@2b72cb8a]" started-at="2023-07-14T16:51:47 IST" name="BaseURI" finished-at="2023-07-14T16:51:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SocialShareControllerGetApi@2b72cb8a]" started-at="2023-07-14T16:51:48 IST" name="StatusCode" finished-at="2023-07-14T16:51:48 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SocialShareControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.NotificationControllerGetApi">
        <test-method signature="isEmailExistInSuppressionList()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:50:35 IST" name="isEmailExistInSuppressionList" finished-at="2023-07-14T16:50:36 IST" duration-ms="1173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEmailExistInSuppressionList -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:50:35 IST" name="BaseURI" finished-at="2023-07-14T16:50:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:50:36 IST" name="StatusCode" finished-at="2023-07-14T16:50:36 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllNotification()[pri:127, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:14 IST" name="getAllNotification" finished-at="2023-07-14T16:53:15 IST" duration-ms="1061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllNotification -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:14 IST" name="BaseURI" finished-at="2023-07-14T16:53:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:15 IST" name="StatusCode" finished-at="2023-07-14T16:53:15 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetCampaignByNotificationId()[pri:128, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:15 IST" name="GetCampaignByNotificationId" finished-at="2023-07-14T16:53:16 IST" duration-ms="1063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCampaignByNotificationId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:15 IST" name="BaseURI" finished-at="2023-07-14T16:53:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:16 IST" name="StatusCode" finished-at="2023-07-14T16:53:16 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetStatusByNotificationId()[pri:129, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:16 IST" name="GetStatusByNotificationId" finished-at="2023-07-14T16:53:18 IST" duration-ms="1155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetStatusByNotificationId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:16 IST" name="BaseURI" finished-at="2023-07-14T16:53:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:18 IST" name="StatusCode" finished-at="2023-07-14T16:53:18 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="SearchCampaignforNotification()[pri:130, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:18 IST" name="SearchCampaignforNotification" finished-at="2023-07-14T16:53:19 IST" duration-ms="1146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchCampaignforNotification -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:18 IST" name="BaseURI" finished-at="2023-07-14T16:53:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:19 IST" name="StatusCode" finished-at="2023-07-14T16:53:19 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:19 IST" name="BaseURI" finished-at="2023-07-14T16:53:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="GetKPIMatrixByCampaignId()[pri:132, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:19 IST" name="GetKPIMatrixByCampaignId" finished-at="2023-07-14T16:53:21 IST" duration-ms="1865" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetKPIMatrixByCampaignId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.NotificationControllerGetApi@6692b6c6]" started-at="2023-07-14T16:53:21 IST" name="StatusCode" finished-at="2023-07-14T16:53:21 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.NotificationControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.SponsorControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.SponsorControllerPutApi@4f704591]" started-at="2023-07-14T16:56:28 IST" name="BaseURI" finished-at="2023-07-14T16:56:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateSponser()[pri:250, instance:com.ripplestreet.AllPutApis.SponsorControllerPutApi@4f704591]" started-at="2023-07-14T16:56:28 IST" name="updateSponser" finished-at="2023-07-14T16:56:29 IST" duration-ms="1582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateSponser -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.SponsorControllerPutApi@4f704591]" started-at="2023-07-14T16:56:29 IST" name="StatusCode" finished-at="2023-07-14T16:56:30 IST" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.SponsorControllerPutApi -->
      <class name="com.ripplestreet.AllPutApis.SegmentationFolderControllerPutApi">
        <test-method signature="updateASegementfolder()[pri:207, instance:com.ripplestreet.AllPutApis.SegmentationFolderControllerPutApi@6f6745d6]" started-at="2023-07-14T16:55:12 IST" name="updateASegementfolder" finished-at="2023-07-14T16:55:13 IST" duration-ms="1579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateASegementfolder -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.SegmentationFolderControllerPutApi@6f6745d6]" started-at="2023-07-14T16:55:12 IST" name="BaseURI" finished-at="2023-07-14T16:55:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.SegmentationFolderControllerPutApi@6f6745d6]" started-at="2023-07-14T16:55:13 IST" name="StatusCode" finished-at="2023-07-14T16:55:14 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.SegmentationFolderControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.LegalControllerGetApi">
        <test-method signature="getLegalDesclaimer()[pri:170, instance:com.ripplestreet.AllGetApis.LegalControllerGetApi@42b3b079]" started-at="2023-07-14T16:54:14 IST" name="getLegalDesclaimer" finished-at="2023-07-14T16:54:16 IST" duration-ms="1273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLegalDesclaimer -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.LegalControllerGetApi@42b3b079]" started-at="2023-07-14T16:54:14 IST" name="BaseURI" finished-at="2023-07-14T16:54:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.LegalControllerGetApi@42b3b079]" started-at="2023-07-14T16:54:16 IST" name="StatusCode" finished-at="2023-07-14T16:54:16 IST" duration-ms="322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.LegalControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.EventDetailControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" started-at="2023-07-14T16:56:11 IST" name="BaseURI" finished-at="2023-07-14T16:56:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="addEventBasicDetail()[pri:240, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" started-at="2023-07-14T16:56:11 IST" name="addEventBasicDetail" finished-at="2023-07-14T16:56:12 IST" duration-ms="1592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addEventBasicDetail -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" started-at="2023-07-14T16:56:12 IST" name="StatusCode" finished-at="2023-07-14T16:56:13 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="updateeventEventMileStones()[pri:241, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" started-at="2023-07-14T16:56:13 IST" name="updateeventEventMileStones" finished-at="2023-07-14T16:56:14 IST" duration-ms="1417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateeventEventMileStones -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" started-at="2023-07-14T16:56:13 IST" name="BaseURI" finished-at="2023-07-14T16:56:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" started-at="2023-07-14T16:56:14 IST" name="StatusCode" finished-at="2023-07-14T16:56:14 IST" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="UpdateEventTarget()[pri:242, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" started-at="2023-07-14T16:56:14 IST" name="UpdateEventTarget" finished-at="2023-07-14T16:56:16 IST" duration-ms="1294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateEventTarget -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" started-at="2023-07-14T16:56:14 IST" name="BaseURI" finished-at="2023-07-14T16:56:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.EventDetailControllerPutApi@1863d2fe]" started-at="2023-07-14T16:56:16 IST" name="StatusCode" finished-at="2023-07-14T16:56:16 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.EventDetailControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.UserStatusControllerGetApi">
        <test-method signature="GetUserAndEventDataByEventIdandPersonId()[pri:45, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@24c4ddae]" started-at="2023-07-14T16:51:35 IST" name="GetUserAndEventDataByEventIdandPersonId" finished-at="2023-07-14T16:51:36 IST" duration-ms="1190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserAndEventDataByEventIdandPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@24c4ddae]" started-at="2023-07-14T16:51:35 IST" name="BaseURI" finished-at="2023-07-14T16:51:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.UserStatusControllerGetApi@24c4ddae]" started-at="2023-07-14T16:51:36 IST" name="StatusCode" finished-at="2023-07-14T16:51:36 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.UserStatusControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.CouponControllerGetApi">
        <test-method signature="getCouponsByActivityId()[pri:91, instance:com.ripplestreet.AllGetApis.CouponControllerGetApi@3116c353]" started-at="2023-07-14T16:52:31 IST" name="getCouponsByActivityId" finished-at="2023-07-14T16:52:32 IST" duration-ms="1061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCouponsByActivityId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CouponControllerGetApi@3116c353]" started-at="2023-07-14T16:52:31 IST" name="BaseURI" finished-at="2023-07-14T16:52:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CouponControllerGetApi@3116c353]" started-at="2023-07-14T16:52:32 IST" name="StatusCode" finished-at="2023-07-14T16:52:32 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.CouponControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.TriggerControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" started-at="2023-07-14T16:52:28 IST" name="BaseURI" finished-at="2023-07-14T16:52:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="GetAllTriggers()[pri:88, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" started-at="2023-07-14T16:52:28 IST" name="GetAllTriggers" finished-at="2023-07-14T16:52:29 IST" duration-ms="1150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAllTriggers -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" started-at="2023-07-14T16:52:29 IST" name="StatusCode" finished-at="2023-07-14T16:52:30 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getTriggerInfoByTableNameAndOperation()[pri:90, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" started-at="2023-07-14T16:52:30 IST" name="getTriggerInfoByTableNameAndOperation" finished-at="2023-07-14T16:52:31 IST" duration-ms="1161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTriggerInfoByTableNameAndOperation -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" started-at="2023-07-14T16:52:30 IST" name="BaseURI" finished-at="2023-07-14T16:52:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" started-at="2023-07-14T16:52:31 IST" name="StatusCode" finished-at="2023-07-14T16:52:31 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getTriggerDefinition()[pri:189, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" started-at="2023-07-14T16:54:40 IST" name="getTriggerDefinition" finished-at="2023-07-14T16:54:42 IST" duration-ms="1470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTriggerDefinition -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" started-at="2023-07-14T16:54:40 IST" name="BaseURI" finished-at="2023-07-14T16:54:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.TriggerControllerGetApi@a37aefe]" started-at="2023-07-14T16:54:42 IST" name="StatusCode" finished-at="2023-07-14T16:54:42 IST" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.TriggerControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.NewTest">
        <test-method signature="f()[pri:0, instance:com.ripplestreet.AllGetApis.NewTest@5456afaa]" started-at="2023-07-14T16:50:28 IST" name="f" finished-at="2023-07-14T16:50:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- com.ripplestreet.AllGetApis.NewTest -->
      <class name="com.ripplestreet.AllGetApis.AchievementControllerGetApi">
        <test-method signature="GetListofAchievements()[pri:59, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" started-at="2023-07-14T16:51:48 IST" name="GetListofAchievements" finished-at="2023-07-14T16:51:49 IST" duration-ms="1147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListofAchievements -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" started-at="2023-07-14T16:51:48 IST" name="BaseURI" finished-at="2023-07-14T16:51:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" started-at="2023-07-14T16:51:49 IST" name="StatusCode" finished-at="2023-07-14T16:51:49 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAchivements()[pri:60, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" started-at="2023-07-14T16:51:49 IST" name="getAchivements" finished-at="2023-07-14T16:51:51 IST" duration-ms="1081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAchivements -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" started-at="2023-07-14T16:51:49 IST" name="BaseURI" finished-at="2023-07-14T16:51:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" started-at="2023-07-14T16:51:51 IST" name="StatusCode" finished-at="2023-07-14T16:51:51 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetListofAchievementsforTriggerId()[pri:61, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" started-at="2023-07-14T16:51:51 IST" name="GetListofAchievementsforTriggerId" finished-at="2023-07-14T16:51:52 IST" duration-ms="1136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetListofAchievementsforTriggerId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" started-at="2023-07-14T16:51:51 IST" name="BaseURI" finished-at="2023-07-14T16:51:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.AchievementControllerGetApi@2462cb01]" started-at="2023-07-14T16:51:52 IST" name="StatusCode" finished-at="2023-07-14T16:51:52 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.AchievementControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.CampaignControllerPutApi">
        <test-method signature="updateCampaign()[pri:233, instance:com.ripplestreet.AllPutApis.CampaignControllerPutApi@3b79fd76]" started-at="2023-07-14T16:55:56 IST" name="updateCampaign" finished-at="2023-07-14T16:55:57 IST" duration-ms="1598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCampaign -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.CampaignControllerPutApi@3b79fd76]" started-at="2023-07-14T16:55:56 IST" name="BaseURI" finished-at="2023-07-14T16:55:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.CampaignControllerPutApi@3b79fd76]" started-at="2023-07-14T16:55:57 IST" name="StatusCode" finished-at="2023-07-14T16:55:57 IST" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.CampaignControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.EnrollmentControllerGetApi">
        <test-method signature="EnrollmentList()[pri:32, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@3224a577]" started-at="2023-07-14T16:51:20 IST" name="EnrollmentList" finished-at="2023-07-14T16:51:21 IST" duration-ms="1134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnrollmentList -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@3224a577]" started-at="2023-07-14T16:51:20 IST" name="BaseURI" finished-at="2023-07-14T16:51:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@3224a577]" started-at="2023-07-14T16:51:21 IST" name="StatusCode" finished-at="2023-07-14T16:51:21 IST" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetUserEnrollments()[pri:33, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@3224a577]" started-at="2023-07-14T16:51:21 IST" name="GetUserEnrollments" finished-at="2023-07-14T16:51:22 IST" duration-ms="1088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserEnrollments -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@3224a577]" started-at="2023-07-14T16:51:21 IST" name="BaseURI" finished-at="2023-07-14T16:51:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EnrollmentControllerGetApi@3224a577]" started-at="2023-07-14T16:51:22 IST" name="StatusCode" finished-at="2023-07-14T16:51:22 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.EnrollmentControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SurveyControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" started-at="2023-07-14T16:54:28 IST" name="BaseURI" finished-at="2023-07-14T16:54:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getSurveyStatusByEventIdAndPid()[pri:179, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" started-at="2023-07-14T16:54:28 IST" name="getSurveyStatusByEventIdAndPid" finished-at="2023-07-14T16:54:29 IST" duration-ms="1462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSurveyStatusByEventIdAndPid -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" started-at="2023-07-14T16:54:29 IST" name="StatusCode" finished-at="2023-07-14T16:54:30 IST" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllLinksByEventId()[pri:180, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" started-at="2023-07-14T16:54:30 IST" name="getAllLinksByEventId" finished-at="2023-07-14T16:54:31 IST" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllLinksByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" started-at="2023-07-14T16:54:30 IST" name="BaseURI" finished-at="2023-07-14T16:54:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" started-at="2023-07-14T16:54:31 IST" name="StatusCode" finished-at="2023-07-14T16:54:31 IST" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" started-at="2023-07-14T16:54:31 IST" name="BaseURI" finished-at="2023-07-14T16:54:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getSurveyListByEventIdAndPid()[pri:181, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" started-at="2023-07-14T16:54:31 IST" name="getSurveyListByEventIdAndPid" finished-at="2023-07-14T16:54:32 IST" duration-ms="1353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSurveyListByEventIdAndPid -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SurveyControllerGetApi@12299890]" started-at="2023-07-14T16:54:32 IST" name="StatusCode" finished-at="2023-07-14T16:54:33 IST" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SurveyControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.DiscussionControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@4e928fbf]" started-at="2023-07-14T16:51:43 IST" name="BaseURI" finished-at="2023-07-14T16:51:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getDiscussionListByFilters()[pri:55, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@4e928fbf]" started-at="2023-07-14T16:51:43 IST" name="getDiscussionListByFilters" finished-at="2023-07-14T16:51:45 IST" duration-ms="1127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDiscussionListByFilters -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@4e928fbf]" started-at="2023-07-14T16:51:45 IST" name="StatusCode" finished-at="2023-07-14T16:51:45 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getDiscussion()[pri:56, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@4e928fbf]" started-at="2023-07-14T16:51:45 IST" name="getDiscussion" finished-at="2023-07-14T16:51:46 IST" duration-ms="1082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDiscussion -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@4e928fbf]" started-at="2023-07-14T16:51:45 IST" name="BaseURI" finished-at="2023-07-14T16:51:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.DiscussionControllerGetApi@4e928fbf]" started-at="2023-07-14T16:51:46 IST" name="StatusCode" finished-at="2023-07-14T16:51:46 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.DiscussionControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.EventControllerGetApi">
        <test-method signature="getAllEvents()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:30 IST" name="getAllEvents" finished-at="2023-07-14T16:50:32 IST" duration-ms="1193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEvents -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:30 IST" name="BaseURI" finished-at="2023-07-14T16:50:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:32 IST" name="StatusCode" finished-at="2023-07-14T16:50:32 IST" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllCurrentMileStoneByEvent()[pri:1, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:36 IST" name="getAllCurrentMileStoneByEvent" finished-at="2023-07-14T16:50:37 IST" duration-ms="1163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllCurrentMileStoneByEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:36 IST" name="BaseURI" finished-at="2023-07-14T16:50:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:37 IST" name="StatusCode" finished-at="2023-07-14T16:50:38 IST" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllMileStonesByEvent()[pri:3, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:38 IST" name="getAllMileStonesByEvent" finished-at="2023-07-14T16:50:39 IST" duration-ms="1103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllMileStonesByEvent -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:38 IST" name="BaseURI" finished-at="2023-07-14T16:50:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:39 IST" name="StatusCode" finished-at="2023-07-14T16:50:39 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:39 IST" name="BaseURI" finished-at="2023-07-14T16:50:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllProductByEvents()[pri:4, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:39 IST" name="getAllProductByEvents" finished-at="2023-07-14T16:50:40 IST" duration-ms="1105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllProductByEvents -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:40 IST" name="StatusCode" finished-at="2023-07-14T16:50:40 IST" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllServices()[pri:5, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:40 IST" name="getAllServices" finished-at="2023-07-14T16:50:41 IST" duration-ms="1141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllServices -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:40 IST" name="BaseURI" finished-at="2023-07-14T16:50:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:41 IST" name="StatusCode" finished-at="2023-07-14T16:50:41 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:41 IST" name="BaseURI" finished-at="2023-07-14T16:50:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getAllSubscriptionsByEvent()[pri:6, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:41 IST" name="getAllSubscriptionsByEvent" finished-at="2023-07-14T16:50:42 IST" duration-ms="1139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSubscriptionsByEvent -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:42 IST" name="StatusCode" finished-at="2023-07-14T16:50:42 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllSubscriptionsByServiceName()[pri:7, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:42 IST" name="getAllSubscriptionsByServiceName" finished-at="2023-07-14T16:50:43 IST" duration-ms="1103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSubscriptionsByServiceName -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:42 IST" name="BaseURI" finished-at="2023-07-14T16:50:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:43 IST" name="StatusCode" finished-at="2023-07-14T16:50:44 IST" duration-ms="469" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="BaseURI" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getEventById()[pri:8, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="getEventById" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventById -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="StatusCode" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getEventDetailBySlug()[pri:9, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="getEventDetailBySlug" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventDetailBySlug -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="StatusCode" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="BaseURI" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getProductDetailEventIdAndProductId()[pri:10, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="getProductDetailEventIdAndProductId" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductDetailEventIdAndProductId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="BaseURI" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="StatusCode" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getpackAndApplicationCountByEventId()[pri:11, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="getpackAndApplicationCountByEventId" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getpackAndApplicationCountByEventId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="StatusCode" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="BaseURI" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getByEventName()[pri:12, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="getByEventName" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getByEventName -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="StatusCode" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="BaseURI" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getCurrentMileStonesByEvent()[pri:13, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="getCurrentMileStonesByEvent" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentMileStonesByEvent -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="StatusCode" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="BaseURI" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getEventDetailForWorkFlow()[pri:14, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="getEventDetailForWorkFlow" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventDetailForWorkFlow -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="BaseURI" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:50:44 IST" name="StatusCode" finished-at="2023-07-14T16:50:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:54:40 IST" name="BaseURI" finished-at="2023-07-14T16:54:40 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getFilteredEvents()[pri:189, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:54:40 IST" name="getFilteredEvents" finished-at="2023-07-14T16:54:40 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFilteredEvents -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:54:40 IST" name="StatusCode" finished-at="2023-07-14T16:54:40 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:54:42 IST" name="BaseURI" finished-at="2023-07-14T16:54:42 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="getEventMileStoneByIdAndDate()[pri:190, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:54:42 IST" name="getEventMileStoneByIdAndDate" finished-at="2023-07-14T16:54:42 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:292)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:273)
at com.ripplestreet.genricUtilities.genricUtilities.StatusCode(genricUtilities.java:170)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:792)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:768)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEventMileStoneByIdAndDate -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.EventControllerGetApi@2e32ccc5]" started-at="2023-07-14T16:54:42 IST" name="StatusCode" finished-at="2023-07-14T16:54:42 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.EventControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.SponserControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" started-at="2023-07-14T16:54:23 IST" name="BaseURI" finished-at="2023-07-14T16:54:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="findSponsorById()[pri:176, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" started-at="2023-07-14T16:54:23 IST" name="findSponsorById" finished-at="2023-07-14T16:54:24 IST" duration-ms="1117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findSponsorById -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" started-at="2023-07-14T16:54:24 IST" name="StatusCode" finished-at="2023-07-14T16:54:25 IST" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllSponsors()[pri:177, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" started-at="2023-07-14T16:54:25 IST" name="getAllSponsors" finished-at="2023-07-14T16:54:26 IST" duration-ms="1158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllSponsors -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" started-at="2023-07-14T16:54:25 IST" name="BaseURI" finished-at="2023-07-14T16:54:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" started-at="2023-07-14T16:54:26 IST" name="StatusCode" finished-at="2023-07-14T16:54:26 IST" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" started-at="2023-07-14T16:54:26 IST" name="BaseURI" finished-at="2023-07-14T16:54:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="findAllsponsorAssetsbysponsorId()[pri:178, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" started-at="2023-07-14T16:54:26 IST" name="findAllsponsorAssetsbysponsorId" finished-at="2023-07-14T16:54:28 IST" duration-ms="1340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllsponsorAssetsbysponsorId -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SponserControllerGetApi@7f8a9499]" started-at="2023-07-14T16:54:28 IST" name="StatusCode" finished-at="2023-07-14T16:54:28 IST" duration-ms="276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SponserControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi">
        <test-method signature="getRewarditems()[pri:121, instance:com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi@7354b8c5]" started-at="2023-07-14T16:53:06 IST" name="getRewarditems" finished-at="2023-07-14T16:53:07 IST" duration-ms="1103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRewarditems -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi@7354b8c5]" started-at="2023-07-14T16:53:06 IST" name="BaseURI" finished-at="2023-07-14T16:53:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi@7354b8c5]" started-at="2023-07-14T16:53:07 IST" name="StatusCode" finished-at="2023-07-14T16:53:07 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.RewardsItemsControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.GameOptionsControllertPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.GameOptionsControllertPutApi@55c53a33]" started-at="2023-07-14T16:55:17 IST" name="BaseURI" finished-at="2023-07-14T16:55:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateOptionById()[pri:210, instance:com.ripplestreet.AllPutApis.GameOptionsControllertPutApi@55c53a33]" started-at="2023-07-14T16:55:17 IST" name="updateOptionById" finished-at="2023-07-14T16:55:19 IST" duration-ms="1485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateOptionById -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.GameOptionsControllertPutApi@55c53a33]" started-at="2023-07-14T16:55:19 IST" name="StatusCode" finished-at="2023-07-14T16:55:19 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.GameOptionsControllertPutApi -->
      <class name="com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi@27e47833]" started-at="2023-07-14T16:55:08 IST" name="BaseURI" finished-at="2023-07-14T16:55:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="UpdateASegment()[pri:205, instance:com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi@27e47833]" started-at="2023-07-14T16:55:08 IST" name="UpdateASegment" finished-at="2023-07-14T16:55:10 IST" duration-ms="1691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateASegment -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi@27e47833]" started-at="2023-07-14T16:55:10 IST" name="StatusCode" finished-at="2023-07-14T16:55:10 IST" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="refreshUserCountBySgment()[pri:206, instance:com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi@27e47833]" started-at="2023-07-14T16:55:10 IST" name="refreshUserCountBySgment" finished-at="2023-07-14T16:55:11 IST" duration-ms="1430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refreshUserCountBySgment -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi@27e47833]" started-at="2023-07-14T16:55:10 IST" name="BaseURI" finished-at="2023-07-14T16:55:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi@27e47833]" started-at="2023-07-14T16:55:11 IST" name="StatusCode" finished-at="2023-07-14T16:55:12 IST" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.SegmentationDefinitionVersion2ControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.CampaignControllerGetApi">
        <test-method signature="findCampaignById()[pri:144, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@64e7619d]" started-at="2023-07-14T16:53:37 IST" name="findCampaignById" finished-at="2023-07-14T16:53:38 IST" duration-ms="1102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findCampaignById -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@64e7619d]" started-at="2023-07-14T16:53:37 IST" name="BaseURI" finished-at="2023-07-14T16:53:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@64e7619d]" started-at="2023-07-14T16:53:38 IST" name="StatusCode" finished-at="2023-07-14T16:53:38 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="findAllCampaingn()[pri:145, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@64e7619d]" started-at="2023-07-14T16:53:38 IST" name="findAllCampaingn" finished-at="2023-07-14T16:53:39 IST" duration-ms="1102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllCampaingn -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@64e7619d]" started-at="2023-07-14T16:53:38 IST" name="BaseURI" finished-at="2023-07-14T16:53:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.CampaignControllerGetApi@64e7619d]" started-at="2023-07-14T16:53:39 IST" name="StatusCode" finished-at="2023-07-14T16:53:39 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.CampaignControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi">
        <test-method signature="getListOfAllocationTransientRecordByEventId()[pri:38, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@1cd629b3]" started-at="2023-07-14T16:51:27 IST" name="getListOfAllocationTransientRecordByEventId" finished-at="2023-07-14T16:51:28 IST" duration-ms="1191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListOfAllocationTransientRecordByEventId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@1cd629b3]" started-at="2023-07-14T16:51:27 IST" name="BaseURI" finished-at="2023-07-14T16:51:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@1cd629b3]" started-at="2023-07-14T16:51:28 IST" name="StatusCode" finished-at="2023-07-14T16:51:28 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getAllocationTransientRecordByEventIdAndPersonId()[pri:39, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@1cd629b3]" started-at="2023-07-14T16:51:28 IST" name="getAllocationTransientRecordByEventIdAndPersonId" finished-at="2023-07-14T16:51:29 IST" duration-ms="1119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllocationTransientRecordByEventIdAndPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@1cd629b3]" started-at="2023-07-14T16:51:28 IST" name="BaseURI" finished-at="2023-07-14T16:51:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi@1cd629b3]" started-at="2023-07-14T16:51:29 IST" name="StatusCode" finished-at="2023-07-14T16:51:29 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.OptinInflightActivationControllerGetApi -->
      <class name="com.ripplestreet.AllGetApis.IntrestesControllerGetApi">
        <test-method signature="Allcategorieslist()[pri:34, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@895e367]" started-at="2023-07-14T16:51:22 IST" name="Allcategorieslist" finished-at="2023-07-14T16:51:23 IST" duration-ms="1303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Allcategorieslist -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@895e367]" started-at="2023-07-14T16:51:22 IST" name="BaseURI" finished-at="2023-07-14T16:51:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@895e367]" started-at="2023-07-14T16:51:23 IST" name="StatusCode" finished-at="2023-07-14T16:51:23 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="getUserInterestByPersonId()[pri:35, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@895e367]" started-at="2023-07-14T16:51:23 IST" name="getUserInterestByPersonId" finished-at="2023-07-14T16:51:24 IST" duration-ms="1119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserInterestByPersonId -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@895e367]" started-at="2023-07-14T16:51:23 IST" name="BaseURI" finished-at="2023-07-14T16:51:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.IntrestesControllerGetApi@895e367]" started-at="2023-07-14T16:51:24 IST" name="StatusCode" finished-at="2023-07-14T16:51:25 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.IntrestesControllerGetApi -->
      <class name="com.ripplestreet.AllPutApis.AchivementControllerPutApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllPutApis.AchivementControllerPutApi@a82c5f1]" started-at="2023-07-14T16:55:02 IST" name="BaseURI" finished-at="2023-07-14T16:55:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="updateAchivement()[pri:202, instance:com.ripplestreet.AllPutApis.AchivementControllerPutApi@a82c5f1]" started-at="2023-07-14T16:55:02 IST" name="updateAchivement" finished-at="2023-07-14T16:55:04 IST" duration-ms="2192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateAchivement -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllPutApis.AchivementControllerPutApi@a82c5f1]" started-at="2023-07-14T16:55:04 IST" name="StatusCode" finished-at="2023-07-14T16:55:04 IST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllPutApis.AchivementControllerPutApi -->
      <class name="com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi">
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:16 IST" name="BaseURI" finished-at="2023-07-14T16:52:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="FindIfUserExistInGivenSegment()[pri:77, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:16 IST" name="FindIfUserExistInGivenSegment" finished-at="2023-07-14T16:52:17 IST" duration-ms="1092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FindIfUserExistInGivenSegment -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:17 IST" name="StatusCode" finished-at="2023-07-14T16:52:17 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:17 IST" name="BaseURI" finished-at="2023-07-14T16:52:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method signature="GetSegmentIdBySegmentName()[pri:78, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:17 IST" name="GetSegmentIdBySegmentName" finished-at="2023-07-14T16:52:18 IST" duration-ms="1081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSegmentIdBySegmentName -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:18 IST" name="StatusCode" finished-at="2023-07-14T16:52:18 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetSegmentsOfaUser()[pri:79, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:18 IST" name="GetSegmentsOfaUser" finished-at="2023-07-14T16:52:19 IST" duration-ms="1149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSegmentsOfaUser -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:18 IST" name="BaseURI" finished-at="2023-07-14T16:52:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:19 IST" name="StatusCode" finished-at="2023-07-14T16:52:19 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetUsersOfaSegment()[pri:80, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:19 IST" name="GetUsersOfaSegment" finished-at="2023-07-14T16:52:20 IST" duration-ms="1133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUsersOfaSegment -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:19 IST" name="BaseURI" finished-at="2023-07-14T16:52:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:20 IST" name="StatusCode" finished-at="2023-07-14T16:52:20 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
        <test-method signature="GetUserDetailsOfaSegment()[pri:81, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:21 IST" name="GetUserDetailsOfaSegment" finished-at="2023-07-14T16:52:22 IST" duration-ms="1239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetUserDetailsOfaSegment -->
        <test-method is-config="true" signature="BaseURI()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:21 IST" name="BaseURI" finished-at="2023-07-14T16:52:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BaseURI -->
        <test-method is-config="true" signature="StatusCode()[pri:0, instance:com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi@4ef782af]" started-at="2023-07-14T16:52:22 IST" name="StatusCode" finished-at="2023-07-14T16:52:22 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StatusCode -->
      </class> <!-- com.ripplestreet.AllGetApis.SegmentationDataControllerGetApi -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
